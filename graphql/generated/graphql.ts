/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
import { gql } from '@apollo/client';
import * as Apollo from '@apollo/client';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
const defaultOptions = {} as const;
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** The `DateTime` scalar type represents a point in time. */
  DateTime: { input: any; output: any; }
  /** The `QueryArgument` scalar type represents a value to be using in Craft element queries. It can be an integer, a string, or a boolean value. */
  QueryArgument: { input: any; output: any; }
};

export type Address = AddressInterface & ElementInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** First line of the address */
  addressLine1: Maybe<Scalars['String']['output']>;
  /** Second line of the address */
  addressLine2: Maybe<Scalars['String']['output']>;
  /** Third line of the address */
  addressLine3: Maybe<Scalars['String']['output']>;
  /** Administrative area. */
  administrativeArea: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** Two-letter country code */
  countryCode: Scalars['String']['output'];
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Dependent locality */
  dependentLocality: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The first name on the address. */
  firstName: Maybe<Scalars['String']['output']>;
  /** The full name on the address. */
  fullName: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The last name on the address. */
  lastName: Maybe<Scalars['String']['output']>;
  /** Latitude */
  latitude: Maybe<Scalars['String']['output']>;
  /** Locality */
  locality: Maybe<Scalars['String']['output']>;
  /** Longitude */
  longitude: Maybe<Scalars['String']['output']>;
  /** Organization name */
  organization: Maybe<Scalars['String']['output']>;
  /** Organization tax ID */
  organizationTaxId: Maybe<Scalars['String']['output']>;
  /** Postal code */
  postalCode: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** Sorting code */
  sortingCode: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type Address_CountArgs = {
  field: Scalars['String']['input'];
};

/** This is the interface implemented by all addresses. */
export type AddressInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** First line of the address */
  addressLine1: Maybe<Scalars['String']['output']>;
  /** Second line of the address */
  addressLine2: Maybe<Scalars['String']['output']>;
  /** Third line of the address */
  addressLine3: Maybe<Scalars['String']['output']>;
  /** Administrative area. */
  administrativeArea: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** Two-letter country code */
  countryCode: Scalars['String']['output'];
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Dependent locality */
  dependentLocality: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The first name on the address. */
  firstName: Maybe<Scalars['String']['output']>;
  /** The full name on the address. */
  fullName: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The last name on the address. */
  lastName: Maybe<Scalars['String']['output']>;
  /** Latitude */
  latitude: Maybe<Scalars['String']['output']>;
  /** Locality */
  locality: Maybe<Scalars['String']['output']>;
  /** Longitude */
  longitude: Maybe<Scalars['String']['output']>;
  /** Organization name */
  organization: Maybe<Scalars['String']['output']>;
  /** Organization tax ID */
  organizationTaxId: Maybe<Scalars['String']['output']>;
  /** Postal code */
  postalCode: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** Sorting code */
  sortingCode: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all addresses. */
export type AddressInterface_CountArgs = {
  field: Scalars['String']['input'];
};

/** This is the interface implemented by all assets. */
export type AssetInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Alternative text for the asset. */
  alt: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the asset file was last modified. */
  dateModified: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The file extension for the asset file. */
  extension: Scalars['String']['output'];
  /** The filename of the asset file. */
  filename: Scalars['String']['output'];
  /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
  focalPoint: Maybe<Array<Maybe<Scalars['Float']['output']>>>;
  /** The ID of the folder that the asset belongs to. */
  folderId: Scalars['Int']['output'];
  /** Returns the file’s format. */
  format: Maybe<Scalars['String']['output']>;
  /** Whether a user-defined focal point is set on the asset. */
  hasFocalPoint: Scalars['Boolean']['output'];
  /** The height in pixels or null if it’s not an image. */
  height: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns a list of images produced from the named Imager X transform. */
  imagerTransform: Maybe<Array<Maybe<ImagerTransformedImageInterface>>>;
  /** An `<img>` tag based on this asset. */
  img: Maybe<Scalars['String']['output']>;
  /** The file kind. */
  kind: Scalars['String']['output'];
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The file’s MIME type, if it can be determined. */
  mimeType: Maybe<Scalars['String']['output']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<AssetInterface>;
  /** The asset’s path in the volume. */
  path: Scalars['String']['output'];
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<AssetInterface>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The file size in bytes. */
  size: Maybe<Scalars['String']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
  srcset: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The user who first added this asset (if known). */
  uploader: Maybe<UserInterface>;
  /** The ID of the user who first added this asset (if known). */
  uploaderId: Maybe<Scalars['Int']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
  url: Maybe<Scalars['String']['output']>;
  /** The ID of the volume that the asset belongs to. */
  volumeId: Maybe<Scalars['Int']['output']>;
  /** The width in pixels or null if it’s not an image. */
  width: Maybe<Scalars['Int']['output']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterface_CountArgs = {
  field: Scalars['String']['input'];
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceFormatArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceHeightArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceImagerTransformArgs = {
  transform: InputMaybe<Scalars['String']['input']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceNextArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfacePrevArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceSrcsetArgs = {
  sizes: Array<Scalars['String']['input']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceUploaderArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceUrlArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceWidthArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};

export type AssetRelationCriteriaInput = {
  /** Narrows the query results to only elements that have been archived. */
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the assets’ files’ last-modified dates. */
  dateModified: InputMaybe<Scalars['String']['input']>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the assets’ filenames. */
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the folders the assets belong to, per the folders’ IDs. */
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on whether the assets have alternative text. */
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the assets’ image heights. */
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ IDs. */
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  /** Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`. */
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the assets’ file kinds. */
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site(s) the elements should be queried in, based on their language. */
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Sets the limit for paginated results. */
  limit: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to elements that do not relate to the provided element IDs. */
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Sets the offset for paginated results. */
  offset: InputMaybe<Scalars['Int']['input']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy: InputMaybe<Scalars['String']['input']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on a reference string. */
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  /** Narrows the relations based on the field they were created in. */
  relatedViaField: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the relations based on the site they were created in. */
  relatedViaSite: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that match a search query. */
  search: InputMaybe<Scalars['String']['input']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the assets’ file sizes (in bytes). */
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ statuses. */
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ titles. */
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that have been soft-deleted. */
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the user the assets were uploaded by, per the user’s ID. */
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the volumes the assets belong to, per the volumes’ handles. */
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs. */
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the assets’ image widths. */
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** A list of transform handles to preload. */
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CategoryRelationCriteriaInput = {
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`. */
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID. */
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only elements that have been archived. */
  archived: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`. */
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only elements that are descendants of another element in its structure provided by its ID. */
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  /** Whether to only return categories that the user has permission to edit. */
  editable: InputMaybe<Scalars['Boolean']['input']>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the category groups the categories belong to per the group’s handles. */
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the category groups the categories belong to, per the groups’ IDs. */
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on whether the elements have any descendants in their structure. */
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ IDs. */
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  /** Determines which site(s) the elements should be queried in, based on their language. */
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants). */
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ level within the structure. */
  level: InputMaybe<Scalars['Int']['input']>;
  /** Sets the limit for paginated results. */
  limit: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID. */
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to elements that do not relate to the provided element IDs. */
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Sets the offset for paginated results. */
  offset: InputMaybe<Scalars['Int']['input']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy: InputMaybe<Scalars['String']['input']>;
  /** Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID. */
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID. */
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID. */
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results based on a reference string. */
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  /** Narrows the relations based on the field they were created in. */
  relatedViaField: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the relations based on the site they were created in. */
  relatedViaSite: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that match a search query. */
  search: InputMaybe<Scalars['String']['input']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ statuses. */
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which structure data should be joined into the query. */
  structureId: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results based on the elements’ titles. */
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that have been soft-deleted. */
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Explicitly determines whether the query should join in the structure data. */
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type Element = ElementInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type Element_CountArgs = {
  field: Scalars['String']['input'];
};

/** This is the interface implemented by all elements. */
export type ElementInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all elements. */
export type ElementInterface_CountArgs = {
  field: Scalars['String']['input'];
};

/** This is the interface implemented by all entries. */
export type EntryInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterface_CountArgs = {
  field: Scalars['String']['input'];
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfacePrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceSeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type EntryRelationCriteriaInput = {
  /** Narrows the query results to only entries that were posted on or after a certain date. */
  after: InputMaybe<Scalars['String']['input']>;
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`. */
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID. */
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only elements that have been archived. */
  archived: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the user group the entries’ authors belong to. */
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs. */
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the entries’ authors. */
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only entries that were posted before a certain date. */
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`. */
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only elements that are descendants of another element in its structure provided by its ID. */
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** The drafts’ creator ID */
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  /** The ID of the draft to return (from the `drafts` table) */
  draftId: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts. */
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  /** Whether draft elements should be returned. */
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  /** Whether to only return entries that the user has permission to edit. */
  editable: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the entries’ expiry dates. */
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the field the entries are contained by. */
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the field the entries are contained by, per the fields’ IDs. */
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on whether the elements have any descendants in their structure. */
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ IDs. */
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  /** Determines which site(s) the elements should be queried in, based on their language. */
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants). */
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ level within the structure. */
  level: InputMaybe<Scalars['Int']['input']>;
  /** Sets the limit for paginated results. */
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID. */
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to elements that do not relate to the provided element IDs. */
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Sets the offset for paginated results. */
  offset: InputMaybe<Scalars['Int']['input']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy: InputMaybe<Scalars['String']['input']>;
  /** Narrows the query results based on the owner element of the entries, per the owners’ IDs. */
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID. */
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID. */
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results based on the entries’ post dates. */
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID. */
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results based on the primary owner element of the entries, per the owners’ IDs. */
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Whether provisional drafts should be returned. */
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on a reference string. */
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  /** Narrows the relations based on the field they were created in. */
  relatedViaField: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the relations based on the site they were created in. */
  relatedViaSite: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** The revisions’ creator ID */
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  /** The ID of the revision to return (from the `revisions` table) */
  revisionId: InputMaybe<Scalars['Int']['input']>;
  /** The source element ID that revisions should be returned for */
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  /** Whether revision elements should be returned. */
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only elements that match a search query. */
  search: InputMaybe<Scalars['String']['input']>;
  /** Narrows the query results based on the section handles the entries belong to. */
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the sections the entries belong to, per the sections’ IDs. */
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ statuses. */
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which structure data should be joined into the query. */
  structureId: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results based on the elements’ titles. */
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that have been soft-deleted. */
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the entries’ entry type handles. */
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the entries’ entry types, per the types’ IDs. */
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Explicitly determines whether the query should join in the structure data. */
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

/** Contents of a file */
export type FileContents = {
  contents: Maybe<Scalars['String']['output']>;
  filename: Scalars['String']['output'];
};

/** This is the interface implemented by all link fields. */
export type HyperLinkInterface = {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};

/** This is the interface implemented by Imager X. */
export type ImagerTransformedImageInterface = {
  /** Extension of transformed image. */
  extension: Maybe<Scalars['String']['output']>;
  /** Filename of transformed image. */
  filename: Maybe<Scalars['String']['output']>;
  /** Height of transformed image. */
  height: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Indicates if the transformed image is newly created. */
  isNew: Maybe<Scalars['Boolean']['output']>;
  /** Mime type of transformed image. */
  mimeType: Maybe<Scalars['String']['output']>;
  /** Path to transformed image. */
  path: Maybe<Scalars['String']['output']>;
  /** Size of transformed image. */
  size: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** URL for transformed image. */
  url: Maybe<Scalars['String']['output']>;
  /** Width of transformed image. */
  width: Maybe<Scalars['Int']['output']>;
};

export type Mutation = {
  ping: Maybe<Scalars['String']['output']>;
};

export type NodeCustomAttribute = {
  attribute: Maybe<Scalars['String']['output']>;
  value: Maybe<Scalars['String']['output']>;
};

/** This is the interface implemented by all nodes. */
export type NodeInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The node’s children. Accepts the same arguments as the `nodes` query. */
  children: Maybe<Array<Maybe<NodeInterface>>>;
  /** Any additional classes for the node. */
  classes: Maybe<Scalars['String']['output']>;
  /** Any additional custom attributes for the node. */
  customAttributes: Maybe<Array<Maybe<NodeCustomAttribute>>>;
  /** Any additional data for the node. */
  data: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The element the node links to. */
  element: Maybe<ElementInterface>;
  /** The ID of the element this node is linked to. */
  elementId: Maybe<Scalars['Int']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The handle of the navigation this node belongs to. */
  navHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the navigation this node belongs to. */
  navId: Maybe<Scalars['Int']['output']>;
  /** The name of the navigation this node belongs to. */
  navName: Maybe<Scalars['String']['output']>;
  /** Whether this node should open in a new window. */
  newWindow: Maybe<Scalars['String']['output']>;
  /** The node’s URI */
  nodeUri: Maybe<Scalars['String']['output']>;
  /** The node’s parent. */
  parent: Maybe<NodeInterface>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The type of node this is. */
  type: Maybe<Scalars['String']['output']>;
  /** The display name for the type of node this is. */
  typeLabel: Maybe<Scalars['String']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The node’s full URL */
  url: Maybe<Scalars['String']['output']>;
  /** The URL for this navigation item. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all nodes. */
export type NodeInterface_CountArgs = {
  field: Scalars['String']['input'];
};


/** This is the interface implemented by all nodes. */
export type NodeInterfaceChildrenArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nav: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  navHandle: InputMaybe<Scalars['String']['input']>;
  navId: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type Query = {
  /** This query is used to query for a single address. */
  address: Maybe<AddressInterface>;
  /** This query is used to return the number of addresses. */
  addressCount: Scalars['Int']['output'];
  /** This query is used to query for addresses. */
  addresses: Maybe<Array<Maybe<AddressInterface>>>;
  /** This query is used to query for a single asset. */
  asset: Maybe<AssetInterface>;
  /** This query is used to return the number of assets. */
  assetCount: Scalars['Int']['output'];
  /** This query is used to query for assets. */
  assets: Maybe<Array<Maybe<AssetInterface>>>;
  /** Entries within the “Builder: 2 Columns” Matrix field. */
  builder2ColumnsFieldEntries: Maybe<Array<Maybe<Builder2ColumnsFieldEntryUnion>>>;
  /** Entries within the “Content Blocks” Matrix field. */
  builderContentBlocksFieldEntries: Maybe<Array<Maybe<BuilderContentBlocksFieldEntryUnion>>>;
  /** Entries within the “Content” Matrix field. */
  builderContentFieldEntries: Maybe<Array<Maybe<BuilderContentFieldEntryUnion>>>;
  /** This query is used to query for entries. */
  entries: Maybe<Array<Maybe<EntryInterface>>>;
  /** This query is used to query for a single entry. */
  entry: Maybe<EntryInterface>;
  /** This query is used to return the number of entries. */
  entryCount: Scalars['Int']['output'];
  /** Entries within the “Error Pages” section. */
  errorPagesEntries: Maybe<Array<Maybe<ErrorPagesSectionEntryUnion>>>;
  /** Entries within the “Home” section. */
  homeEntries: Maybe<Array<Maybe<HomeSectionEntryUnion>>>;
  /** This query is used to query for Imager X transforms. */
  imagerTransform: Maybe<Array<Maybe<ImagerTransformedImageInterface>>>;
  /** This query is used to query for a single node. */
  navigationNode: Maybe<NodeInterface>;
  /** This query is used to query for nodes. */
  navigationNodes: Maybe<Array<Maybe<NodeInterface>>>;
  /** Entries within the “News” section. */
  newsEntries: Maybe<Array<Maybe<NewsSectionEntryUnion>>>;
  /** Entries within the “Pages” section. */
  pagesEntries: Maybe<Array<Maybe<PagesSectionEntryUnion>>>;
  ping: Maybe<Scalars['String']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** This query is used to query for a single user. */
  user: Maybe<UserInterface>;
  /** This query is used to return the number of users. */
  userCount: Scalars['Int']['output'];
  /** This query is used to query for users. */
  users: Maybe<Array<Maybe<UserInterface>>>;
};


export type QueryAddressArgs = {
  administrativeArea: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  countryCode: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryAddressCountArgs = {
  administrativeArea: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  countryCode: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryAddressesArgs = {
  administrativeArea: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  countryCode: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryAssetArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryAssetCountArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryAssetsArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryBuilder2ColumnsFieldEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryBuilderContentBlocksFieldEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryBuilderContentFieldEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryEntryArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryEntryCountArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryErrorPagesEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryHomeEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryImagerTransformArgs = {
  id: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  url: InputMaybe<Scalars['String']['input']>;
};


export type QueryNavigationNodeArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nav: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  navHandle: InputMaybe<Scalars['String']['input']>;
  navId: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryNavigationNodesArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nav: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  navHandle: InputMaybe<Scalars['String']['input']>;
  navId: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryNewsEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryPagesEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QuerySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};


export type QueryUserArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryUserCountArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryUsersArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

/** Optional - The SEOmatic environment that should be used */
export enum SeomaticEnvironment {
  /** Live production environment, with indexing enabled */
  Live = 'live',
  /** Local Development environment, with debugging enabled and indexing disabled */
  Local = 'local',
  /** Staging environment, with indexing disabled */
  Staging = 'staging'
}

export enum SeomaticFrontendTemplate {
  /** The ads.txt file */
  Ads = 'ads',
  /** The humans.txt file */
  Humans = 'humans',
  /** The robots.txt file */
  Robots = 'robots',
  /** The security.txt file */
  Security = 'security'
}

/** This is the interface implemented by SEOmatic. */
export type SeomaticInterface = {
  /**
   * The FrontendTemplateContainer SEOmatic container.
   * @deprecated This query is deprecated and will be removed in the future. You should use `frontendTemplates` instead.
   */
  frontendTemplateContainer: Maybe<Scalars['String']['output']>;
  frontendTemplates: Maybe<Array<Maybe<FileContents>>>;
  /** The MetaJsonLdContainer SEOmatic container. */
  metaJsonLdContainer: Maybe<Scalars['String']['output']>;
  /** The MetaLinkContainer SEOmatic container. */
  metaLinkContainer: Maybe<Scalars['String']['output']>;
  /** The MetaScriptContainer SEOmatic container. */
  metaScriptContainer: Maybe<Scalars['String']['output']>;
  /** The MetaSiteVarsContainer SEOmatic container. */
  metaSiteVarsContainer: Maybe<Scalars['String']['output']>;
  /** The MetaTagContainer SEOmatic container. */
  metaTagContainer: Maybe<Scalars['String']['output']>;
  /** The MetaTitleContainer SEOmatic container. */
  metaTitleContainer: Maybe<Scalars['String']['output']>;
  sitemapIndexes: Maybe<Array<Maybe<FileContents>>>;
  sitemapStyles: Maybe<FileContents>;
  sitemaps: Maybe<Array<Maybe<FileContents>>>;
};


/** This is the interface implemented by SEOmatic. */
export type SeomaticInterfaceFrontendTemplatesArgs = {
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  type: InputMaybe<SeomaticFrontendTemplate>;
};


/** This is the interface implemented by SEOmatic. */
export type SeomaticInterfaceSitemapIndexesArgs = {
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
};


/** This is the interface implemented by SEOmatic. */
export type SeomaticInterfaceSitemapsArgs = {
  filename: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  sourceBundleHandle: InputMaybe<Scalars['String']['input']>;
  sourceBundleType: InputMaybe<Scalars['String']['input']>;
};

/** This entity has all the SEOmatic fields */
export type SeomaticType = SeomaticInterface & {
  /**
   * The FrontendTemplateContainer SEOmatic container.
   * @deprecated This query is deprecated and will be removed in the future. You should use `frontendTemplates` instead.
   */
  frontendTemplateContainer: Maybe<Scalars['String']['output']>;
  frontendTemplates: Maybe<Array<Maybe<FileContents>>>;
  /** The MetaJsonLdContainer SEOmatic container. */
  metaJsonLdContainer: Maybe<Scalars['String']['output']>;
  /** The MetaLinkContainer SEOmatic container. */
  metaLinkContainer: Maybe<Scalars['String']['output']>;
  /** The MetaScriptContainer SEOmatic container. */
  metaScriptContainer: Maybe<Scalars['String']['output']>;
  /** The MetaSiteVarsContainer SEOmatic container. */
  metaSiteVarsContainer: Maybe<Scalars['String']['output']>;
  /** The MetaTagContainer SEOmatic container. */
  metaTagContainer: Maybe<Scalars['String']['output']>;
  /** The MetaTitleContainer SEOmatic container. */
  metaTitleContainer: Maybe<Scalars['String']['output']>;
  sitemapIndexes: Maybe<Array<Maybe<FileContents>>>;
  sitemapStyles: Maybe<FileContents>;
  sitemaps: Maybe<Array<Maybe<FileContents>>>;
};


/** This entity has all the SEOmatic fields */
export type SeomaticTypeFrontendTemplatesArgs = {
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  type: InputMaybe<SeomaticFrontendTemplate>;
};


/** This entity has all the SEOmatic fields */
export type SeomaticTypeSitemapIndexesArgs = {
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
};


/** This entity has all the SEOmatic fields */
export type SeomaticTypeSitemapsArgs = {
  filename: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  sourceBundleHandle: InputMaybe<Scalars['String']['input']>;
  sourceBundleType: InputMaybe<Scalars['String']['input']>;
};

export type TagRelationCriteriaInput = {
  /** Narrows the query results to only elements that have been archived. */
  archived: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the tag groups the tags belong to per the group’s handles. */
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the tag groups the tags belong to, per the groups’ IDs. */
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ IDs. */
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  /** Determines which site(s) the elements should be queried in, based on their language. */
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Sets the limit for paginated results. */
  limit: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to elements that do not relate to the provided element IDs. */
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Sets the offset for paginated results. */
  offset: InputMaybe<Scalars['Int']['input']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy: InputMaybe<Scalars['String']['input']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on a reference string. */
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  /** Narrows the relations based on the field they were created in. */
  relatedViaField: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the relations based on the site they were created in. */
  relatedViaSite: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that match a search query. */
  search: InputMaybe<Scalars['String']['input']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ statuses. */
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ titles. */
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that have been soft-deleted. */
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type User = ElementInterface & UserInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The user’s addresses. */
  addresses: Maybe<Array<Maybe<AddressInterface>>>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The user’s email. */
  email: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The user’s first name. */
  firstName: Maybe<Scalars['String']['output']>;
  /** The user’s first name or username. */
  friendlyName: Maybe<Scalars['String']['output']>;
  /** The user’s full name. */
  fullName: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The user’s last name. */
  lastName: Maybe<Scalars['String']['output']>;
  /** The user’s full name or username. */
  name: Scalars['String']['output'];
  /** The user’s photo. */
  photo: Maybe<AssetInterface>;
  /** The user’s preferences. */
  preferences: Scalars['String']['output'];
  /** The user’s preferred language. */
  preferredLanguage: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The username. */
  username: Maybe<Scalars['String']['output']>;
};


export type User_CountArgs = {
  field: Scalars['String']['input'];
};


export type UserAddressesArgs = {
  administrativeArea: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  countryCode: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

/** This is the interface implemented by all users. */
export type UserInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The user’s addresses. */
  addresses: Maybe<Array<Maybe<AddressInterface>>>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The user’s email. */
  email: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The user’s first name. */
  firstName: Maybe<Scalars['String']['output']>;
  /** The user’s first name or username. */
  friendlyName: Maybe<Scalars['String']['output']>;
  /** The user’s full name. */
  fullName: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The user’s last name. */
  lastName: Maybe<Scalars['String']['output']>;
  /** The user’s full name or username. */
  name: Scalars['String']['output'];
  /** The user’s photo. */
  photo: Maybe<AssetInterface>;
  /** The user’s preferences. */
  preferences: Scalars['String']['output'];
  /** The user’s preferred language. */
  preferredLanguage: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The username. */
  username: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all users. */
export type UserInterface_CountArgs = {
  field: Scalars['String']['input'];
};


/** This is the interface implemented by all users. */
export type UserInterfaceAddressesArgs = {
  administrativeArea: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  countryCode: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type UserRelationCriteriaInput = {
  /** Narrows the query results to only elements that have been archived. */
  archived: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on whether the users have uploaded any assets. */
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on whether the users are listed as the author of any entries. */
  authors: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the users’ email addresses. */
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the users’ first names. */
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the users’ full names. */
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the user group the users belong to. */
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the user group the users belong to, per the groups’ IDs. */
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only users that have (or don’t have) a user photo. */
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ IDs. */
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  /** Determines which site(s) the elements should be queried in, based on their language. */
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the users’ last names. */
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Sets the limit for paginated results. */
  limit: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to elements that do not relate to the provided element IDs. */
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Sets the offset for paginated results. */
  offset: InputMaybe<Scalars['Int']['input']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy: InputMaybe<Scalars['String']['input']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on a reference string. */
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  /** Narrows the relations based on the field they were created in. */
  relatedViaField: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the relations based on the site they were created in. */
  relatedViaSite: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that match a search query. */
  search: InputMaybe<Scalars['String']['input']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ statuses. */
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ titles. */
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that have been soft-deleted. */
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the users’ usernames. */
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type BlockCode_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** Code Editor field */
  codeSnippet: Maybe<CodeSnippet_CodeData>;
  codeSnippetName: Maybe<Scalars['String']['output']>;
  collapsed: Maybe<Scalars['Boolean']['output']>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type BlockCode_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type BlockCode_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockCode_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockCode_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockCode_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockCode_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockCode_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockCode_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockCode_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockCode_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockCode_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type BlockColumn_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  builderContentBlocks: Array<Maybe<BuilderContentBlocks_MatrixField>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type BlockColumn_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type BlockColumn_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockColumn_EntryBuilderContentBlocksArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockColumn_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockColumn_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockColumn_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockColumn_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockColumn_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockColumn_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockColumn_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockColumn_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockColumn_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type BlockImage_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  image: Array<Maybe<AssetInterface>>;
  imageRatio: Maybe<Scalars['String']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  showCaption: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type BlockImage_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type BlockImage_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImage_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImage_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImage_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImage_EntryImageArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type BlockImage_EntryImageRatioArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImage_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImage_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImage_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImage_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImage_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImage_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type BlockImages_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  imageRatio: Maybe<Scalars['String']['output']>;
  images: Array<Maybe<AssetInterface>>;
  imagesViewMode: Maybe<Scalars['String']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  showCaption: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type BlockImages_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type BlockImages_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImages_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImages_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImages_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImages_EntryImageRatioArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImages_EntryImagesArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type BlockImages_EntryImagesViewModeArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImages_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImages_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImages_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImages_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImages_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImages_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type BlockLinks_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  hyperLinks: Array<Maybe<HyperLinkInterface>>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type BlockLinks_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type BlockLinks_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockLinks_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockLinks_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockLinks_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockLinks_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockLinks_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockLinks_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockLinks_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockLinks_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockLinks_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type BlockQuote_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  hyperLink: Array<Maybe<HyperLinkInterface>>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  quote: Maybe<Scalars['String']['output']>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  source: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type BlockQuote_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type BlockQuote_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockQuote_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockQuote_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockQuote_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockQuote_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockQuote_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockQuote_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockQuote_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockQuote_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockQuote_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type BlockSection_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  backgroundColor: Maybe<Scalars['String']['output']>;
  builderContentBlocks: Array<Maybe<BuilderContentBlocks_MatrixField>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  spaceBetween: Maybe<Scalars['String']['output']>;
  spacingYAxis: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type BlockSection_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type BlockSection_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntryBackgroundColorArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntryBuilderContentBlocksArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};


export type BlockSection_EntrySpaceBetweenArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntrySpacingYAxisArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type BlockSpacer_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  height: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type BlockSpacer_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type BlockSpacer_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSpacer_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSpacer_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSpacer_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSpacer_EntryHeightArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSpacer_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSpacer_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSpacer_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSpacer_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSpacer_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSpacer_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type BlockTextImage_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  image: Array<Maybe<AssetInterface>>;
  imagePosition: Maybe<Scalars['String']['output']>;
  imageRatio: Maybe<Scalars['String']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  richText: Maybe<Scalars['String']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  showCaption: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type BlockTextImage_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type BlockTextImage_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockTextImage_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockTextImage_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockTextImage_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockTextImage_EntryImageArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type BlockTextImage_EntryImagePositionArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockTextImage_EntryImageRatioArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockTextImage_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockTextImage_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockTextImage_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockTextImage_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockTextImage_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockTextImage_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type BlockText_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  richText: Maybe<Scalars['String']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type BlockText_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type BlockText_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockText_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockText_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockText_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockText_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockText_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockText_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockText_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockText_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockText_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type BlockVideo_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  autoplay: Maybe<Scalars['Boolean']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  loop: Maybe<Scalars['Boolean']['output']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
  videoId: Maybe<Scalars['String']['output']>;
  videoProvider: Maybe<Scalars['String']['output']>;
};


export type BlockVideo_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type BlockVideo_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockVideo_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockVideo_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockVideo_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockVideo_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockVideo_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockVideo_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockVideo_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockVideo_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockVideo_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};


export type BlockVideo_EntryVideoProviderArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type Builder2ColumnsFieldEntryUnion = BlockColumn_Entry;

export type BuilderContentBlocksFieldEntryUnion = BlockCode_Entry | BlockImage_Entry | BlockImages_Entry | BlockLinks_Entry | BlockQuote_Entry | BlockSpacer_Entry | BlockTextImage_Entry | BlockText_Entry | BlockVideo_Entry;

export type BuilderContentBlocks_MatrixField = BlockCode_Entry | BlockImage_Entry | BlockImages_Entry | BlockLinks_Entry | BlockQuote_Entry | BlockSpacer_Entry | BlockTextImage_Entry | BlockText_Entry | BlockVideo_Entry;

export type BuilderContentFieldEntryUnion = BlockSection_Entry;

export type BuilderContent_MatrixField = BlockSection_Entry;

/** This entity has all the CodeData properties */
export type CodeSnippet_CodeData = {
  /** The language of the Code Field */
  language: Maybe<Scalars['String']['output']>;
  /** The data entered into the Code Field */
  value: Maybe<Scalars['String']['output']>;
};

export type EntryContentBuilder_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  builderContent: Array<Maybe<BuilderContent_MatrixField>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  customTitle: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  description: Maybe<Scalars['String']['output']>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  image: Array<Maybe<AssetInterface>>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  seo: Maybe<Scalars['String']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type EntryContentBuilder_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type EntryContentBuilder_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryContentBuilder_EntryBuilderContentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryContentBuilder_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryContentBuilder_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryContentBuilder_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryContentBuilder_EntryImageArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type EntryContentBuilder_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryContentBuilder_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryContentBuilder_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryContentBuilder_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryContentBuilder_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryContentBuilder_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type EntryError_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  customTitle: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  description: Maybe<Scalars['String']['output']>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  image: Array<Maybe<AssetInterface>>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  seo: Maybe<Scalars['String']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type EntryError_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type EntryError_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryError_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryError_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryError_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryError_EntryImageArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type EntryError_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryError_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryError_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryError_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryError_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryError_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type EntryHome_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  builderContent: Array<Maybe<BuilderContent_MatrixField>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  customTitle: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  description: Maybe<Scalars['String']['output']>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  image: Array<Maybe<AssetInterface>>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  seo: Maybe<Scalars['String']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type EntryHome_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type EntryHome_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryHome_EntryBuilderContentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryHome_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryHome_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryHome_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryHome_EntryImageArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type EntryHome_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryHome_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryHome_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryHome_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryHome_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryHome_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type EntryListNews_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  customTitle: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  description: Maybe<Scalars['String']['output']>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  image: Array<Maybe<AssetInterface>>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  seo: Maybe<Scalars['String']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type EntryListNews_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type EntryListNews_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryListNews_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryListNews_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryListNews_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryListNews_EntryImageArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type EntryListNews_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryListNews_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryListNews_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryListNews_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryListNews_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryListNews_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type EntryNewsDetail_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  builderContent: Array<Maybe<BuilderContent_MatrixField>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  customTitle: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  description: Maybe<Scalars['String']['output']>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  image: Array<Maybe<AssetInterface>>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  seo: Maybe<Scalars['String']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type EntryNewsDetail_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type EntryNewsDetail_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryNewsDetail_EntryBuilderContentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryNewsDetail_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryNewsDetail_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryNewsDetail_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryNewsDetail_EntryImageArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type EntryNewsDetail_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryNewsDetail_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryNewsDetail_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryNewsDetail_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryNewsDetail_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryNewsDetail_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type ErrorPagesSectionEntryUnion = EntryError_Entry;

export type Files_Asset = AssetInterface & ElementInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Alternative text for the asset. */
  alt: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  caption: Maybe<Scalars['String']['output']>;
  customTitle: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the asset file was last modified. */
  dateModified: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The file extension for the asset file. */
  extension: Scalars['String']['output'];
  /** The filename of the asset file. */
  filename: Scalars['String']['output'];
  /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
  focalPoint: Maybe<Array<Maybe<Scalars['Float']['output']>>>;
  /** The ID of the folder that the asset belongs to. */
  folderId: Scalars['Int']['output'];
  /** Returns the file’s format. */
  format: Maybe<Scalars['String']['output']>;
  /** Whether a user-defined focal point is set on the asset. */
  hasFocalPoint: Scalars['Boolean']['output'];
  /** The height in pixels or null if it’s not an image. */
  height: Maybe<Scalars['Int']['output']>;
  hyperLink: Array<Maybe<HyperLinkInterface>>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns a list of images produced from the named Imager X transform. */
  imagerTransform: Maybe<Array<Maybe<ImagerTransformedImageInterface>>>;
  /** An `<img>` tag based on this asset. */
  img: Maybe<Scalars['String']['output']>;
  /** The file kind. */
  kind: Scalars['String']['output'];
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The file’s MIME type, if it can be determined. */
  mimeType: Maybe<Scalars['String']['output']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<AssetInterface>;
  /** The asset’s path in the volume. */
  path: Scalars['String']['output'];
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<AssetInterface>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The file size in bytes. */
  size: Maybe<Scalars['String']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  source: Maybe<Scalars['String']['output']>;
  /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
  srcset: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The user who first added this asset (if known). */
  uploader: Maybe<UserInterface>;
  /** The ID of the user who first added this asset (if known). */
  uploaderId: Maybe<Scalars['Int']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
  url: Maybe<Scalars['String']['output']>;
  /** The ID of the volume that the asset belongs to. */
  volumeId: Maybe<Scalars['Int']['output']>;
  /** The width in pixels or null if it’s not an image. */
  width: Maybe<Scalars['Int']['output']>;
};


export type Files_Asset_CountArgs = {
  field: Scalars['String']['input'];
};


export type Files_AssetFormatArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Files_AssetHeightArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Files_AssetImagerTransformArgs = {
  transform: InputMaybe<Scalars['String']['input']>;
};


export type Files_AssetNextArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Files_AssetPrevArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Files_AssetSrcsetArgs = {
  sizes: Array<Scalars['String']['input']>;
};


export type Files_AssetUploaderArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Files_AssetUrlArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Files_AssetWidthArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};

export type HomeSectionEntryUnion = EntryHome_Entry;

export type HyperLink_Asset_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLink_Asset_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLink_Category_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};

export type HyperLink_Custom_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};

export type HyperLink_Email_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLink_Email_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLink_Embed_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};

export type HyperLink_Entry_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLink_Entry_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLink_Phone_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLink_Phone_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLink_Site_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLink_Site_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLink_Url_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLink_Url_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLink_User_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};

export type HyperLinks_Asset_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLinks_Asset_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLinks_Category_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};

export type HyperLinks_Custom_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};

export type HyperLinks_Email_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLinks_Email_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLinks_Embed_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLinks_Embed_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLinks_Entry_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLinks_Entry_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLinks_Phone_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLinks_Phone_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLinks_Site_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLinks_Site_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLinks_Url_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLinks_Url_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLinks_User_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};

/** This entity has all the Imager X transform image interface fields. */
export type Imagerx = ImagerTransformedImageInterface & {
  /** Extension of transformed image. */
  extension: Maybe<Scalars['String']['output']>;
  /** Filename of transformed image. */
  filename: Maybe<Scalars['String']['output']>;
  /** Height of transformed image. */
  height: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Indicates if the transformed image is newly created. */
  isNew: Maybe<Scalars['Boolean']['output']>;
  /** Mime type of transformed image. */
  mimeType: Maybe<Scalars['String']['output']>;
  /** Path to transformed image. */
  path: Maybe<Scalars['String']['output']>;
  /** Size of transformed image. */
  size: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** URL for transformed image. */
  url: Maybe<Scalars['String']['output']>;
  /** Width of transformed image. */
  width: Maybe<Scalars['Int']['output']>;
};

export type Images_Asset = AssetInterface & ElementInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Alternative text for the asset. */
  alt: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  caption: Maybe<Scalars['String']['output']>;
  customTitle: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the asset file was last modified. */
  dateModified: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The file extension for the asset file. */
  extension: Scalars['String']['output'];
  /** The filename of the asset file. */
  filename: Scalars['String']['output'];
  /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
  focalPoint: Maybe<Array<Maybe<Scalars['Float']['output']>>>;
  /** The ID of the folder that the asset belongs to. */
  folderId: Scalars['Int']['output'];
  /** Returns the file’s format. */
  format: Maybe<Scalars['String']['output']>;
  /** Whether a user-defined focal point is set on the asset. */
  hasFocalPoint: Scalars['Boolean']['output'];
  /** The height in pixels or null if it’s not an image. */
  height: Maybe<Scalars['Int']['output']>;
  hyperLink: Array<Maybe<HyperLinkInterface>>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns a list of images produced from the named Imager X transform. */
  imagerTransform: Maybe<Array<Maybe<ImagerTransformedImageInterface>>>;
  /** An `<img>` tag based on this asset. */
  img: Maybe<Scalars['String']['output']>;
  /** The file kind. */
  kind: Scalars['String']['output'];
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The file’s MIME type, if it can be determined. */
  mimeType: Maybe<Scalars['String']['output']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<AssetInterface>;
  /** The asset’s path in the volume. */
  path: Scalars['String']['output'];
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<AssetInterface>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The file size in bytes. */
  size: Maybe<Scalars['String']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  source: Maybe<Scalars['String']['output']>;
  /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
  srcset: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The user who first added this asset (if known). */
  uploader: Maybe<UserInterface>;
  /** The ID of the user who first added this asset (if known). */
  uploaderId: Maybe<Scalars['Int']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
  url: Maybe<Scalars['String']['output']>;
  /** The ID of the volume that the asset belongs to. */
  volumeId: Maybe<Scalars['Int']['output']>;
  /** The width in pixels or null if it’s not an image. */
  width: Maybe<Scalars['Int']['output']>;
};


export type Images_Asset_CountArgs = {
  field: Scalars['String']['input'];
};


export type Images_AssetFormatArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Images_AssetHeightArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Images_AssetImagerTransformArgs = {
  transform: InputMaybe<Scalars['String']['input']>;
};


export type Images_AssetNextArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Images_AssetPrevArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Images_AssetSrcsetArgs = {
  sizes: Array<Scalars['String']['input']>;
};


export type Images_AssetUploaderArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Images_AssetUrlArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Images_AssetWidthArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};

export type NavigationMain_Node = ElementInterface & NodeInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The node’s children. Accepts the same arguments as the `nodes` query. */
  children: Maybe<Array<Maybe<NodeInterface>>>;
  /** Any additional classes for the node. */
  classes: Maybe<Scalars['String']['output']>;
  /** Any additional custom attributes for the node. */
  customAttributes: Maybe<Array<Maybe<NodeCustomAttribute>>>;
  /** Any additional data for the node. */
  data: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The element the node links to. */
  element: Maybe<ElementInterface>;
  /** The ID of the element this node is linked to. */
  elementId: Maybe<Scalars['Int']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The handle of the navigation this node belongs to. */
  navHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the navigation this node belongs to. */
  navId: Maybe<Scalars['Int']['output']>;
  /** The name of the navigation this node belongs to. */
  navName: Maybe<Scalars['String']['output']>;
  /** Whether this node should open in a new window. */
  newWindow: Maybe<Scalars['String']['output']>;
  /** The node’s URI */
  nodeUri: Maybe<Scalars['String']['output']>;
  /** The node’s parent. */
  parent: Maybe<NodeInterface>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The type of node this is. */
  type: Maybe<Scalars['String']['output']>;
  /** The display name for the type of node this is. */
  typeLabel: Maybe<Scalars['String']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The node’s full URL */
  url: Maybe<Scalars['String']['output']>;
  /** The URL for this navigation item. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type NavigationMain_Node_CountArgs = {
  field: Scalars['String']['input'];
};


export type NavigationMain_NodeChildrenArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nav: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  navHandle: InputMaybe<Scalars['String']['input']>;
  navId: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type NewsSectionEntryUnion = EntryNewsDetail_Entry;

export type PagesSectionEntryUnion = EntryContentBuilder_Entry | EntryListNews_Entry;

export type TemplateImages_Asset = AssetInterface & ElementInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Alternative text for the asset. */
  alt: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  caption: Maybe<Scalars['String']['output']>;
  customTitle: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the asset file was last modified. */
  dateModified: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The file extension for the asset file. */
  extension: Scalars['String']['output'];
  /** The filename of the asset file. */
  filename: Scalars['String']['output'];
  /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
  focalPoint: Maybe<Array<Maybe<Scalars['Float']['output']>>>;
  /** The ID of the folder that the asset belongs to. */
  folderId: Scalars['Int']['output'];
  /** Returns the file’s format. */
  format: Maybe<Scalars['String']['output']>;
  /** Whether a user-defined focal point is set on the asset. */
  hasFocalPoint: Scalars['Boolean']['output'];
  /** The height in pixels or null if it’s not an image. */
  height: Maybe<Scalars['Int']['output']>;
  hyperLink: Array<Maybe<HyperLinkInterface>>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns a list of images produced from the named Imager X transform. */
  imagerTransform: Maybe<Array<Maybe<ImagerTransformedImageInterface>>>;
  /** An `<img>` tag based on this asset. */
  img: Maybe<Scalars['String']['output']>;
  /** The file kind. */
  kind: Scalars['String']['output'];
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The file’s MIME type, if it can be determined. */
  mimeType: Maybe<Scalars['String']['output']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<AssetInterface>;
  /** The asset’s path in the volume. */
  path: Scalars['String']['output'];
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<AssetInterface>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The file size in bytes. */
  size: Maybe<Scalars['String']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  source: Maybe<Scalars['String']['output']>;
  /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
  srcset: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The user who first added this asset (if known). */
  uploader: Maybe<UserInterface>;
  /** The ID of the user who first added this asset (if known). */
  uploaderId: Maybe<Scalars['Int']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
  url: Maybe<Scalars['String']['output']>;
  /** The ID of the volume that the asset belongs to. */
  volumeId: Maybe<Scalars['Int']['output']>;
  /** The width in pixels or null if it’s not an image. */
  width: Maybe<Scalars['Int']['output']>;
};


export type TemplateImages_Asset_CountArgs = {
  field: Scalars['String']['input'];
};


export type TemplateImages_AssetFormatArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type TemplateImages_AssetHeightArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type TemplateImages_AssetImagerTransformArgs = {
  transform: InputMaybe<Scalars['String']['input']>;
};


export type TemplateImages_AssetNextArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type TemplateImages_AssetPrevArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type TemplateImages_AssetSrcsetArgs = {
  sizes: Array<Scalars['String']['input']>;
};


export type TemplateImages_AssetUploaderArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type TemplateImages_AssetUrlArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type TemplateImages_AssetWidthArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};

export type Users_Asset = AssetInterface & ElementInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Alternative text for the asset. */
  alt: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  caption: Maybe<Scalars['String']['output']>;
  customTitle: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the asset file was last modified. */
  dateModified: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The file extension for the asset file. */
  extension: Scalars['String']['output'];
  /** The filename of the asset file. */
  filename: Scalars['String']['output'];
  /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
  focalPoint: Maybe<Array<Maybe<Scalars['Float']['output']>>>;
  /** The ID of the folder that the asset belongs to. */
  folderId: Scalars['Int']['output'];
  /** Returns the file’s format. */
  format: Maybe<Scalars['String']['output']>;
  /** Whether a user-defined focal point is set on the asset. */
  hasFocalPoint: Scalars['Boolean']['output'];
  /** The height in pixels or null if it’s not an image. */
  height: Maybe<Scalars['Int']['output']>;
  hyperLink: Array<Maybe<HyperLinkInterface>>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns a list of images produced from the named Imager X transform. */
  imagerTransform: Maybe<Array<Maybe<ImagerTransformedImageInterface>>>;
  /** An `<img>` tag based on this asset. */
  img: Maybe<Scalars['String']['output']>;
  /** The file kind. */
  kind: Scalars['String']['output'];
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The file’s MIME type, if it can be determined. */
  mimeType: Maybe<Scalars['String']['output']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<AssetInterface>;
  /** The asset’s path in the volume. */
  path: Scalars['String']['output'];
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<AssetInterface>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The file size in bytes. */
  size: Maybe<Scalars['String']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
  srcset: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The user who first added this asset (if known). */
  uploader: Maybe<UserInterface>;
  /** The ID of the user who first added this asset (if known). */
  uploaderId: Maybe<Scalars['Int']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
  url: Maybe<Scalars['String']['output']>;
  /** The ID of the volume that the asset belongs to. */
  volumeId: Maybe<Scalars['Int']['output']>;
  /** The width in pixels or null if it’s not an image. */
  width: Maybe<Scalars['Int']['output']>;
};


export type Users_Asset_CountArgs = {
  field: Scalars['String']['input'];
};


export type Users_AssetFormatArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Users_AssetHeightArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Users_AssetImagerTransformArgs = {
  transform: InputMaybe<Scalars['String']['input']>;
};


export type Users_AssetNextArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Users_AssetPrevArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Users_AssetSrcsetArgs = {
  sizes: Array<Scalars['String']['input']>;
};


export type Users_AssetUploaderArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Users_AssetUrlArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Users_AssetWidthArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};

type Entry_Data_BlockCode_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_BlockCode_Entry_Fragment' };

type Entry_Data_BlockColumn_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_BlockColumn_Entry_Fragment' };

type Entry_Data_BlockImage_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_BlockImage_Entry_Fragment' };

type Entry_Data_BlockImages_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_BlockImages_Entry_Fragment' };

type Entry_Data_BlockLinks_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_BlockLinks_Entry_Fragment' };

type Entry_Data_BlockQuote_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_BlockQuote_Entry_Fragment' };

type Entry_Data_BlockSection_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_BlockSection_Entry_Fragment' };

type Entry_Data_BlockSpacer_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_BlockSpacer_Entry_Fragment' };

type Entry_Data_BlockTextImage_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_BlockTextImage_Entry_Fragment' };

type Entry_Data_BlockText_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_BlockText_Entry_Fragment' };

type Entry_Data_BlockVideo_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_BlockVideo_Entry_Fragment' };

type Entry_Data_EntryContentBuilder_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_EntryContentBuilder_Entry_Fragment' };

type Entry_Data_EntryError_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_EntryError_Entry_Fragment' };

type Entry_Data_EntryHome_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_EntryHome_Entry_Fragment' };

type Entry_Data_EntryListNews_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_EntryListNews_Entry_Fragment' };

type Entry_Data_EntryNewsDetail_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_EntryNewsDetail_Entry_Fragment' };

export type Entry_DataFragment = Entry_Data_BlockCode_Entry_Fragment | Entry_Data_BlockColumn_Entry_Fragment | Entry_Data_BlockImage_Entry_Fragment | Entry_Data_BlockImages_Entry_Fragment | Entry_Data_BlockLinks_Entry_Fragment | Entry_Data_BlockQuote_Entry_Fragment | Entry_Data_BlockSection_Entry_Fragment | Entry_Data_BlockSpacer_Entry_Fragment | Entry_Data_BlockTextImage_Entry_Fragment | Entry_Data_BlockText_Entry_Fragment | Entry_Data_BlockVideo_Entry_Fragment | Entry_Data_EntryContentBuilder_Entry_Fragment | Entry_Data_EntryError_Entry_Fragment | Entry_Data_EntryHome_Entry_Fragment | Entry_Data_EntryListNews_Entry_Fragment | Entry_Data_EntryNewsDetail_Entry_Fragment;

export type GetNewsEntriesQueryVariables = Exact<{
  site?: Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>;
  section: Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>;
}>;


export type GetNewsEntriesQuery = { entries: Array<{ ' $fragmentRefs'?: { 'Entry_Data_BlockCode_Entry_Fragment': Entry_Data_BlockCode_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_BlockColumn_Entry_Fragment': Entry_Data_BlockColumn_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_BlockImage_Entry_Fragment': Entry_Data_BlockImage_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_BlockImages_Entry_Fragment': Entry_Data_BlockImages_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_BlockLinks_Entry_Fragment': Entry_Data_BlockLinks_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_BlockQuote_Entry_Fragment': Entry_Data_BlockQuote_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_BlockSection_Entry_Fragment': Entry_Data_BlockSection_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_BlockSpacer_Entry_Fragment': Entry_Data_BlockSpacer_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_BlockTextImage_Entry_Fragment': Entry_Data_BlockTextImage_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_BlockText_Entry_Fragment': Entry_Data_BlockText_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_BlockVideo_Entry_Fragment': Entry_Data_BlockVideo_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_EntryContentBuilder_Entry_Fragment': Entry_Data_EntryContentBuilder_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_EntryError_Entry_Fragment': Entry_Data_EntryError_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_EntryHome_Entry_Fragment': Entry_Data_EntryHome_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_EntryListNews_Entry_Fragment': Entry_Data_EntryListNews_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_EntryNewsDetail_Entry_Fragment': Entry_Data_EntryNewsDetail_Entry_Fragment } } | null> | null };

export const Entry_DataFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"entry_data"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"EntryInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"slug"}},{"kind":"Field","name":{"kind":"Name","value":"uri"}},{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"canonicalId"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"sectionHandle"}},{"kind":"Field","name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","name":{"kind":"Name","value":"siteHandle"}},{"kind":"Field","name":{"kind":"Name","value":"siteId"}}]}}]} as unknown as DocumentNode<Entry_DataFragment, unknown>;
export const GetNewsEntriesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetNewsEntries"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"site"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},"defaultValue":{"kind":"ListValue","values":[{"kind":"StringValue","value":"default","block":false}]}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"section"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"entries"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"site"},"value":{"kind":"Variable","name":{"kind":"Name","value":"site"}}},{"kind":"Argument","name":{"kind":"Name","value":"section"},"value":{"kind":"Variable","name":{"kind":"Name","value":"section"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"entry_data"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"entry_data"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"EntryInterface"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"slug"}},{"kind":"Field","name":{"kind":"Name","value":"uri"}},{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"canonicalId"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"sectionHandle"}},{"kind":"Field","name":{"kind":"Name","value":"typeHandle"}},{"kind":"Field","name":{"kind":"Name","value":"siteHandle"}},{"kind":"Field","name":{"kind":"Name","value":"siteId"}}]}}]} as unknown as DocumentNode<GetNewsEntriesQuery, GetNewsEntriesQueryVariables>;
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** The `DateTime` scalar type represents a point in time. */
  DateTime: { input: any; output: any; }
  /** The `QueryArgument` scalar type represents a value to be using in Craft element queries. It can be an integer, a string, or a boolean value. */
  QueryArgument: { input: any; output: any; }
};

export type Address = AddressInterface & ElementInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** First line of the address */
  addressLine1: Maybe<Scalars['String']['output']>;
  /** Second line of the address */
  addressLine2: Maybe<Scalars['String']['output']>;
  /** Third line of the address */
  addressLine3: Maybe<Scalars['String']['output']>;
  /** Administrative area. */
  administrativeArea: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** Two-letter country code */
  countryCode: Scalars['String']['output'];
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Dependent locality */
  dependentLocality: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The first name on the address. */
  firstName: Maybe<Scalars['String']['output']>;
  /** The full name on the address. */
  fullName: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The last name on the address. */
  lastName: Maybe<Scalars['String']['output']>;
  /** Latitude */
  latitude: Maybe<Scalars['String']['output']>;
  /** Locality */
  locality: Maybe<Scalars['String']['output']>;
  /** Longitude */
  longitude: Maybe<Scalars['String']['output']>;
  /** Organization name */
  organization: Maybe<Scalars['String']['output']>;
  /** Organization tax ID */
  organizationTaxId: Maybe<Scalars['String']['output']>;
  /** Postal code */
  postalCode: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** Sorting code */
  sortingCode: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type Address_CountArgs = {
  field: Scalars['String']['input'];
};

/** This is the interface implemented by all addresses. */
export type AddressInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** First line of the address */
  addressLine1: Maybe<Scalars['String']['output']>;
  /** Second line of the address */
  addressLine2: Maybe<Scalars['String']['output']>;
  /** Third line of the address */
  addressLine3: Maybe<Scalars['String']['output']>;
  /** Administrative area. */
  administrativeArea: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** Two-letter country code */
  countryCode: Scalars['String']['output'];
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Dependent locality */
  dependentLocality: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The first name on the address. */
  firstName: Maybe<Scalars['String']['output']>;
  /** The full name on the address. */
  fullName: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The last name on the address. */
  lastName: Maybe<Scalars['String']['output']>;
  /** Latitude */
  latitude: Maybe<Scalars['String']['output']>;
  /** Locality */
  locality: Maybe<Scalars['String']['output']>;
  /** Longitude */
  longitude: Maybe<Scalars['String']['output']>;
  /** Organization name */
  organization: Maybe<Scalars['String']['output']>;
  /** Organization tax ID */
  organizationTaxId: Maybe<Scalars['String']['output']>;
  /** Postal code */
  postalCode: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** Sorting code */
  sortingCode: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all addresses. */
export type AddressInterface_CountArgs = {
  field: Scalars['String']['input'];
};

/** This is the interface implemented by all assets. */
export type AssetInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Alternative text for the asset. */
  alt: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the asset file was last modified. */
  dateModified: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The file extension for the asset file. */
  extension: Scalars['String']['output'];
  /** The filename of the asset file. */
  filename: Scalars['String']['output'];
  /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
  focalPoint: Maybe<Array<Maybe<Scalars['Float']['output']>>>;
  /** The ID of the folder that the asset belongs to. */
  folderId: Scalars['Int']['output'];
  /** Returns the file’s format. */
  format: Maybe<Scalars['String']['output']>;
  /** Whether a user-defined focal point is set on the asset. */
  hasFocalPoint: Scalars['Boolean']['output'];
  /** The height in pixels or null if it’s not an image. */
  height: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns a list of images produced from the named Imager X transform. */
  imagerTransform: Maybe<Array<Maybe<ImagerTransformedImageInterface>>>;
  /** An `<img>` tag based on this asset. */
  img: Maybe<Scalars['String']['output']>;
  /** The file kind. */
  kind: Scalars['String']['output'];
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The file’s MIME type, if it can be determined. */
  mimeType: Maybe<Scalars['String']['output']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<AssetInterface>;
  /** The asset’s path in the volume. */
  path: Scalars['String']['output'];
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<AssetInterface>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The file size in bytes. */
  size: Maybe<Scalars['String']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
  srcset: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The user who first added this asset (if known). */
  uploader: Maybe<UserInterface>;
  /** The ID of the user who first added this asset (if known). */
  uploaderId: Maybe<Scalars['Int']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
  url: Maybe<Scalars['String']['output']>;
  /** The ID of the volume that the asset belongs to. */
  volumeId: Maybe<Scalars['Int']['output']>;
  /** The width in pixels or null if it’s not an image. */
  width: Maybe<Scalars['Int']['output']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterface_CountArgs = {
  field: Scalars['String']['input'];
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceFormatArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceHeightArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceImagerTransformArgs = {
  transform: InputMaybe<Scalars['String']['input']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceNextArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfacePrevArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceSrcsetArgs = {
  sizes: Array<Scalars['String']['input']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceUploaderArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceUrlArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceWidthArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};

export type AssetRelationCriteriaInput = {
  /** Narrows the query results to only elements that have been archived. */
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the assets’ files’ last-modified dates. */
  dateModified: InputMaybe<Scalars['String']['input']>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the assets’ filenames. */
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the folders the assets belong to, per the folders’ IDs. */
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on whether the assets have alternative text. */
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the assets’ image heights. */
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ IDs. */
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  /** Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`. */
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the assets’ file kinds. */
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site(s) the elements should be queried in, based on their language. */
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Sets the limit for paginated results. */
  limit: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to elements that do not relate to the provided element IDs. */
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Sets the offset for paginated results. */
  offset: InputMaybe<Scalars['Int']['input']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy: InputMaybe<Scalars['String']['input']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on a reference string. */
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  /** Narrows the relations based on the field they were created in. */
  relatedViaField: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the relations based on the site they were created in. */
  relatedViaSite: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that match a search query. */
  search: InputMaybe<Scalars['String']['input']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the assets’ file sizes (in bytes). */
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ statuses. */
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ titles. */
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that have been soft-deleted. */
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the user the assets were uploaded by, per the user’s ID. */
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the volumes the assets belong to, per the volumes’ handles. */
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs. */
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the assets’ image widths. */
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** A list of transform handles to preload. */
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CategoryRelationCriteriaInput = {
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`. */
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID. */
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only elements that have been archived. */
  archived: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`. */
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only elements that are descendants of another element in its structure provided by its ID. */
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  /** Whether to only return categories that the user has permission to edit. */
  editable: InputMaybe<Scalars['Boolean']['input']>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the category groups the categories belong to per the group’s handles. */
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the category groups the categories belong to, per the groups’ IDs. */
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on whether the elements have any descendants in their structure. */
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ IDs. */
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  /** Determines which site(s) the elements should be queried in, based on their language. */
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants). */
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ level within the structure. */
  level: InputMaybe<Scalars['Int']['input']>;
  /** Sets the limit for paginated results. */
  limit: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID. */
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to elements that do not relate to the provided element IDs. */
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Sets the offset for paginated results. */
  offset: InputMaybe<Scalars['Int']['input']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy: InputMaybe<Scalars['String']['input']>;
  /** Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID. */
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID. */
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID. */
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results based on a reference string. */
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  /** Narrows the relations based on the field they were created in. */
  relatedViaField: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the relations based on the site they were created in. */
  relatedViaSite: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that match a search query. */
  search: InputMaybe<Scalars['String']['input']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ statuses. */
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which structure data should be joined into the query. */
  structureId: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results based on the elements’ titles. */
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that have been soft-deleted. */
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Explicitly determines whether the query should join in the structure data. */
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type Element = ElementInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type Element_CountArgs = {
  field: Scalars['String']['input'];
};

/** This is the interface implemented by all elements. */
export type ElementInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all elements. */
export type ElementInterface_CountArgs = {
  field: Scalars['String']['input'];
};

/** This is the interface implemented by all entries. */
export type EntryInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterface_CountArgs = {
  field: Scalars['String']['input'];
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfacePrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceSeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type EntryRelationCriteriaInput = {
  /** Narrows the query results to only entries that were posted on or after a certain date. */
  after: InputMaybe<Scalars['String']['input']>;
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`. */
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID. */
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only elements that have been archived. */
  archived: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the user group the entries’ authors belong to. */
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs. */
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the entries’ authors. */
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only entries that were posted before a certain date. */
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`. */
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only elements that are descendants of another element in its structure provided by its ID. */
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** The drafts’ creator ID */
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  /** The ID of the draft to return (from the `drafts` table) */
  draftId: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts. */
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  /** Whether draft elements should be returned. */
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  /** Whether to only return entries that the user has permission to edit. */
  editable: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the entries’ expiry dates. */
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the field the entries are contained by. */
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the field the entries are contained by, per the fields’ IDs. */
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on whether the elements have any descendants in their structure. */
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ IDs. */
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  /** Determines which site(s) the elements should be queried in, based on their language. */
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants). */
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ level within the structure. */
  level: InputMaybe<Scalars['Int']['input']>;
  /** Sets the limit for paginated results. */
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID. */
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to elements that do not relate to the provided element IDs. */
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Sets the offset for paginated results. */
  offset: InputMaybe<Scalars['Int']['input']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy: InputMaybe<Scalars['String']['input']>;
  /** Narrows the query results based on the owner element of the entries, per the owners’ IDs. */
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID. */
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID. */
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results based on the entries’ post dates. */
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID. */
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results based on the primary owner element of the entries, per the owners’ IDs. */
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Whether provisional drafts should be returned. */
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on a reference string. */
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  /** Narrows the relations based on the field they were created in. */
  relatedViaField: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the relations based on the site they were created in. */
  relatedViaSite: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** The revisions’ creator ID */
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  /** The ID of the revision to return (from the `revisions` table) */
  revisionId: InputMaybe<Scalars['Int']['input']>;
  /** The source element ID that revisions should be returned for */
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  /** Whether revision elements should be returned. */
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only elements that match a search query. */
  search: InputMaybe<Scalars['String']['input']>;
  /** Narrows the query results based on the section handles the entries belong to. */
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the sections the entries belong to, per the sections’ IDs. */
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ statuses. */
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which structure data should be joined into the query. */
  structureId: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results based on the elements’ titles. */
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that have been soft-deleted. */
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the entries’ entry type handles. */
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the entries’ entry types, per the types’ IDs. */
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Explicitly determines whether the query should join in the structure data. */
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

/** Contents of a file */
export type FileContents = {
  contents: Maybe<Scalars['String']['output']>;
  filename: Scalars['String']['output'];
};

/** This is the interface implemented by all link fields. */
export type HyperLinkInterface = {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};

/** This is the interface implemented by Imager X. */
export type ImagerTransformedImageInterface = {
  /** Extension of transformed image. */
  extension: Maybe<Scalars['String']['output']>;
  /** Filename of transformed image. */
  filename: Maybe<Scalars['String']['output']>;
  /** Height of transformed image. */
  height: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Indicates if the transformed image is newly created. */
  isNew: Maybe<Scalars['Boolean']['output']>;
  /** Mime type of transformed image. */
  mimeType: Maybe<Scalars['String']['output']>;
  /** Path to transformed image. */
  path: Maybe<Scalars['String']['output']>;
  /** Size of transformed image. */
  size: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** URL for transformed image. */
  url: Maybe<Scalars['String']['output']>;
  /** Width of transformed image. */
  width: Maybe<Scalars['Int']['output']>;
};

export type Mutation = {
  ping: Maybe<Scalars['String']['output']>;
};

export type NodeCustomAttribute = {
  attribute: Maybe<Scalars['String']['output']>;
  value: Maybe<Scalars['String']['output']>;
};

/** This is the interface implemented by all nodes. */
export type NodeInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The node’s children. Accepts the same arguments as the `nodes` query. */
  children: Maybe<Array<Maybe<NodeInterface>>>;
  /** Any additional classes for the node. */
  classes: Maybe<Scalars['String']['output']>;
  /** Any additional custom attributes for the node. */
  customAttributes: Maybe<Array<Maybe<NodeCustomAttribute>>>;
  /** Any additional data for the node. */
  data: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The element the node links to. */
  element: Maybe<ElementInterface>;
  /** The ID of the element this node is linked to. */
  elementId: Maybe<Scalars['Int']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The handle of the navigation this node belongs to. */
  navHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the navigation this node belongs to. */
  navId: Maybe<Scalars['Int']['output']>;
  /** The name of the navigation this node belongs to. */
  navName: Maybe<Scalars['String']['output']>;
  /** Whether this node should open in a new window. */
  newWindow: Maybe<Scalars['String']['output']>;
  /** The node’s URI */
  nodeUri: Maybe<Scalars['String']['output']>;
  /** The node’s parent. */
  parent: Maybe<NodeInterface>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The type of node this is. */
  type: Maybe<Scalars['String']['output']>;
  /** The display name for the type of node this is. */
  typeLabel: Maybe<Scalars['String']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The node’s full URL */
  url: Maybe<Scalars['String']['output']>;
  /** The URL for this navigation item. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all nodes. */
export type NodeInterface_CountArgs = {
  field: Scalars['String']['input'];
};


/** This is the interface implemented by all nodes. */
export type NodeInterfaceChildrenArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nav: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  navHandle: InputMaybe<Scalars['String']['input']>;
  navId: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type Query = {
  /** This query is used to query for a single address. */
  address: Maybe<AddressInterface>;
  /** This query is used to return the number of addresses. */
  addressCount: Scalars['Int']['output'];
  /** This query is used to query for addresses. */
  addresses: Maybe<Array<Maybe<AddressInterface>>>;
  /** This query is used to query for a single asset. */
  asset: Maybe<AssetInterface>;
  /** This query is used to return the number of assets. */
  assetCount: Scalars['Int']['output'];
  /** This query is used to query for assets. */
  assets: Maybe<Array<Maybe<AssetInterface>>>;
  /** Entries within the “Builder: 2 Columns” Matrix field. */
  builder2ColumnsFieldEntries: Maybe<Array<Maybe<Builder2ColumnsFieldEntryUnion>>>;
  /** Entries within the “Content Blocks” Matrix field. */
  builderContentBlocksFieldEntries: Maybe<Array<Maybe<BuilderContentBlocksFieldEntryUnion>>>;
  /** Entries within the “Content” Matrix field. */
  builderContentFieldEntries: Maybe<Array<Maybe<BuilderContentFieldEntryUnion>>>;
  /** This query is used to query for entries. */
  entries: Maybe<Array<Maybe<EntryInterface>>>;
  /** This query is used to query for a single entry. */
  entry: Maybe<EntryInterface>;
  /** This query is used to return the number of entries. */
  entryCount: Scalars['Int']['output'];
  /** Entries within the “Error Pages” section. */
  errorPagesEntries: Maybe<Array<Maybe<ErrorPagesSectionEntryUnion>>>;
  /** Entries within the “Home” section. */
  homeEntries: Maybe<Array<Maybe<HomeSectionEntryUnion>>>;
  /** This query is used to query for Imager X transforms. */
  imagerTransform: Maybe<Array<Maybe<ImagerTransformedImageInterface>>>;
  /** This query is used to query for a single node. */
  navigationNode: Maybe<NodeInterface>;
  /** This query is used to query for nodes. */
  navigationNodes: Maybe<Array<Maybe<NodeInterface>>>;
  /** Entries within the “News” section. */
  newsEntries: Maybe<Array<Maybe<NewsSectionEntryUnion>>>;
  /** Entries within the “Pages” section. */
  pagesEntries: Maybe<Array<Maybe<PagesSectionEntryUnion>>>;
  ping: Maybe<Scalars['String']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** This query is used to query for a single user. */
  user: Maybe<UserInterface>;
  /** This query is used to return the number of users. */
  userCount: Scalars['Int']['output'];
  /** This query is used to query for users. */
  users: Maybe<Array<Maybe<UserInterface>>>;
};


export type QueryAddressArgs = {
  administrativeArea: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  countryCode: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryAddressCountArgs = {
  administrativeArea: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  countryCode: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryAddressesArgs = {
  administrativeArea: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  countryCode: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryAssetArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryAssetCountArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryAssetsArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryBuilder2ColumnsFieldEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryBuilderContentBlocksFieldEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryBuilderContentFieldEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryEntryArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryEntryCountArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryErrorPagesEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryHomeEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryImagerTransformArgs = {
  id: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  url: InputMaybe<Scalars['String']['input']>;
};


export type QueryNavigationNodeArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nav: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  navHandle: InputMaybe<Scalars['String']['input']>;
  navId: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryNavigationNodesArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nav: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  navHandle: InputMaybe<Scalars['String']['input']>;
  navId: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryNewsEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryPagesEntriesArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QuerySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};


export type QueryUserArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryUserCountArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryUsersArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

/** Optional - The SEOmatic environment that should be used */
export enum SeomaticEnvironment {
  /** Live production environment, with indexing enabled */
  Live = 'live',
  /** Local Development environment, with debugging enabled and indexing disabled */
  Local = 'local',
  /** Staging environment, with indexing disabled */
  Staging = 'staging'
}

export enum SeomaticFrontendTemplate {
  /** The ads.txt file */
  Ads = 'ads',
  /** The humans.txt file */
  Humans = 'humans',
  /** The robots.txt file */
  Robots = 'robots',
  /** The security.txt file */
  Security = 'security'
}

/** This is the interface implemented by SEOmatic. */
export type SeomaticInterface = {
  /**
   * The FrontendTemplateContainer SEOmatic container.
   * @deprecated This query is deprecated and will be removed in the future. You should use `frontendTemplates` instead.
   */
  frontendTemplateContainer: Maybe<Scalars['String']['output']>;
  frontendTemplates: Maybe<Array<Maybe<FileContents>>>;
  /** The MetaJsonLdContainer SEOmatic container. */
  metaJsonLdContainer: Maybe<Scalars['String']['output']>;
  /** The MetaLinkContainer SEOmatic container. */
  metaLinkContainer: Maybe<Scalars['String']['output']>;
  /** The MetaScriptContainer SEOmatic container. */
  metaScriptContainer: Maybe<Scalars['String']['output']>;
  /** The MetaSiteVarsContainer SEOmatic container. */
  metaSiteVarsContainer: Maybe<Scalars['String']['output']>;
  /** The MetaTagContainer SEOmatic container. */
  metaTagContainer: Maybe<Scalars['String']['output']>;
  /** The MetaTitleContainer SEOmatic container. */
  metaTitleContainer: Maybe<Scalars['String']['output']>;
  sitemapIndexes: Maybe<Array<Maybe<FileContents>>>;
  sitemapStyles: Maybe<FileContents>;
  sitemaps: Maybe<Array<Maybe<FileContents>>>;
};


/** This is the interface implemented by SEOmatic. */
export type SeomaticInterfaceFrontendTemplatesArgs = {
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  type: InputMaybe<SeomaticFrontendTemplate>;
};


/** This is the interface implemented by SEOmatic. */
export type SeomaticInterfaceSitemapIndexesArgs = {
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
};


/** This is the interface implemented by SEOmatic. */
export type SeomaticInterfaceSitemapsArgs = {
  filename: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  sourceBundleHandle: InputMaybe<Scalars['String']['input']>;
  sourceBundleType: InputMaybe<Scalars['String']['input']>;
};

/** This entity has all the SEOmatic fields */
export type SeomaticType = SeomaticInterface & {
  /**
   * The FrontendTemplateContainer SEOmatic container.
   * @deprecated This query is deprecated and will be removed in the future. You should use `frontendTemplates` instead.
   */
  frontendTemplateContainer: Maybe<Scalars['String']['output']>;
  frontendTemplates: Maybe<Array<Maybe<FileContents>>>;
  /** The MetaJsonLdContainer SEOmatic container. */
  metaJsonLdContainer: Maybe<Scalars['String']['output']>;
  /** The MetaLinkContainer SEOmatic container. */
  metaLinkContainer: Maybe<Scalars['String']['output']>;
  /** The MetaScriptContainer SEOmatic container. */
  metaScriptContainer: Maybe<Scalars['String']['output']>;
  /** The MetaSiteVarsContainer SEOmatic container. */
  metaSiteVarsContainer: Maybe<Scalars['String']['output']>;
  /** The MetaTagContainer SEOmatic container. */
  metaTagContainer: Maybe<Scalars['String']['output']>;
  /** The MetaTitleContainer SEOmatic container. */
  metaTitleContainer: Maybe<Scalars['String']['output']>;
  sitemapIndexes: Maybe<Array<Maybe<FileContents>>>;
  sitemapStyles: Maybe<FileContents>;
  sitemaps: Maybe<Array<Maybe<FileContents>>>;
};


/** This entity has all the SEOmatic fields */
export type SeomaticTypeFrontendTemplatesArgs = {
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  type: InputMaybe<SeomaticFrontendTemplate>;
};


/** This entity has all the SEOmatic fields */
export type SeomaticTypeSitemapIndexesArgs = {
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
};


/** This entity has all the SEOmatic fields */
export type SeomaticTypeSitemapsArgs = {
  filename: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  sourceBundleHandle: InputMaybe<Scalars['String']['input']>;
  sourceBundleType: InputMaybe<Scalars['String']['input']>;
};

export type TagRelationCriteriaInput = {
  /** Narrows the query results to only elements that have been archived. */
  archived: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the tag groups the tags belong to per the group’s handles. */
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the tag groups the tags belong to, per the groups’ IDs. */
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ IDs. */
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  /** Determines which site(s) the elements should be queried in, based on their language. */
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Sets the limit for paginated results. */
  limit: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to elements that do not relate to the provided element IDs. */
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Sets the offset for paginated results. */
  offset: InputMaybe<Scalars['Int']['input']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy: InputMaybe<Scalars['String']['input']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on a reference string. */
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  /** Narrows the relations based on the field they were created in. */
  relatedViaField: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the relations based on the site they were created in. */
  relatedViaSite: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that match a search query. */
  search: InputMaybe<Scalars['String']['input']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ statuses. */
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ titles. */
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that have been soft-deleted. */
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type User = ElementInterface & UserInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The user’s addresses. */
  addresses: Maybe<Array<Maybe<AddressInterface>>>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The user’s email. */
  email: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The user’s first name. */
  firstName: Maybe<Scalars['String']['output']>;
  /** The user’s first name or username. */
  friendlyName: Maybe<Scalars['String']['output']>;
  /** The user’s full name. */
  fullName: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The user’s last name. */
  lastName: Maybe<Scalars['String']['output']>;
  /** The user’s full name or username. */
  name: Scalars['String']['output'];
  /** The user’s photo. */
  photo: Maybe<AssetInterface>;
  /** The user’s preferences. */
  preferences: Scalars['String']['output'];
  /** The user’s preferred language. */
  preferredLanguage: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The username. */
  username: Maybe<Scalars['String']['output']>;
};


export type User_CountArgs = {
  field: Scalars['String']['input'];
};


export type UserAddressesArgs = {
  administrativeArea: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  countryCode: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

/** This is the interface implemented by all users. */
export type UserInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The user’s addresses. */
  addresses: Maybe<Array<Maybe<AddressInterface>>>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The user’s email. */
  email: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The user’s first name. */
  firstName: Maybe<Scalars['String']['output']>;
  /** The user’s first name or username. */
  friendlyName: Maybe<Scalars['String']['output']>;
  /** The user’s full name. */
  fullName: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The user’s last name. */
  lastName: Maybe<Scalars['String']['output']>;
  /** The user’s full name or username. */
  name: Scalars['String']['output'];
  /** The user’s photo. */
  photo: Maybe<AssetInterface>;
  /** The user’s preferences. */
  preferences: Scalars['String']['output'];
  /** The user’s preferred language. */
  preferredLanguage: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The username. */
  username: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all users. */
export type UserInterface_CountArgs = {
  field: Scalars['String']['input'];
};


/** This is the interface implemented by all users. */
export type UserInterfaceAddressesArgs = {
  administrativeArea: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  countryCode: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type UserRelationCriteriaInput = {
  /** Narrows the query results to only elements that have been archived. */
  archived: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on whether the users have uploaded any assets. */
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on whether the users are listed as the author of any entries. */
  authors: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the users’ email addresses. */
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the users’ first names. */
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the users’ full names. */
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the user group the users belong to. */
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the user group the users belong to, per the groups’ IDs. */
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only users that have (or don’t have) a user photo. */
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ IDs. */
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  /** Determines which site(s) the elements should be queried in, based on their language. */
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the users’ last names. */
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Sets the limit for paginated results. */
  limit: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to elements that do not relate to the provided element IDs. */
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Sets the offset for paginated results. */
  offset: InputMaybe<Scalars['Int']['input']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy: InputMaybe<Scalars['String']['input']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on a reference string. */
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  /** Narrows the relations based on the field they were created in. */
  relatedViaField: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the relations based on the site they were created in. */
  relatedViaSite: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that match a search query. */
  search: InputMaybe<Scalars['String']['input']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ statuses. */
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ titles. */
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that have been soft-deleted. */
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the users’ usernames. */
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type BlockCode_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** Code Editor field */
  codeSnippet: Maybe<CodeSnippet_CodeData>;
  codeSnippetName: Maybe<Scalars['String']['output']>;
  collapsed: Maybe<Scalars['Boolean']['output']>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type BlockCode_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type BlockCode_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockCode_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockCode_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockCode_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockCode_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockCode_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockCode_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockCode_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockCode_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockCode_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type BlockColumn_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  builderContentBlocks: Array<Maybe<BuilderContentBlocks_MatrixField>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type BlockColumn_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type BlockColumn_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockColumn_EntryBuilderContentBlocksArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockColumn_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockColumn_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockColumn_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockColumn_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockColumn_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockColumn_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockColumn_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockColumn_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockColumn_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type BlockImage_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  image: Array<Maybe<AssetInterface>>;
  imageRatio: Maybe<Scalars['String']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  showCaption: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type BlockImage_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type BlockImage_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImage_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImage_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImage_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImage_EntryImageArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type BlockImage_EntryImageRatioArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImage_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImage_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImage_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImage_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImage_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImage_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type BlockImages_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  imageRatio: Maybe<Scalars['String']['output']>;
  images: Array<Maybe<AssetInterface>>;
  imagesViewMode: Maybe<Scalars['String']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  showCaption: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type BlockImages_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type BlockImages_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImages_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImages_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImages_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImages_EntryImageRatioArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImages_EntryImagesArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type BlockImages_EntryImagesViewModeArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImages_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImages_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImages_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImages_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImages_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockImages_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type BlockLinks_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  hyperLinks: Array<Maybe<HyperLinkInterface>>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type BlockLinks_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type BlockLinks_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockLinks_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockLinks_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockLinks_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockLinks_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockLinks_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockLinks_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockLinks_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockLinks_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockLinks_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type BlockQuote_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  hyperLink: Array<Maybe<HyperLinkInterface>>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  quote: Maybe<Scalars['String']['output']>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  source: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type BlockQuote_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type BlockQuote_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockQuote_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockQuote_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockQuote_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockQuote_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockQuote_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockQuote_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockQuote_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockQuote_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockQuote_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type BlockSection_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  backgroundColor: Maybe<Scalars['String']['output']>;
  builderContentBlocks: Array<Maybe<BuilderContentBlocks_MatrixField>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  spaceBetween: Maybe<Scalars['String']['output']>;
  spacingYAxis: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type BlockSection_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type BlockSection_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntryBackgroundColorArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntryBuilderContentBlocksArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};


export type BlockSection_EntrySpaceBetweenArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSection_EntrySpacingYAxisArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type BlockSpacer_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  height: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type BlockSpacer_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type BlockSpacer_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSpacer_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSpacer_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSpacer_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSpacer_EntryHeightArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSpacer_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSpacer_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSpacer_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSpacer_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSpacer_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockSpacer_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type BlockTextImage_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  image: Array<Maybe<AssetInterface>>;
  imagePosition: Maybe<Scalars['String']['output']>;
  imageRatio: Maybe<Scalars['String']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  richText: Maybe<Scalars['String']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  showCaption: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type BlockTextImage_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type BlockTextImage_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockTextImage_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockTextImage_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockTextImage_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockTextImage_EntryImageArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type BlockTextImage_EntryImagePositionArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockTextImage_EntryImageRatioArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockTextImage_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockTextImage_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockTextImage_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockTextImage_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockTextImage_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockTextImage_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type BlockText_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  richText: Maybe<Scalars['String']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type BlockText_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type BlockText_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockText_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockText_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockText_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockText_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockText_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockText_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockText_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockText_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockText_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type BlockVideo_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  autoplay: Maybe<Scalars['Boolean']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  loop: Maybe<Scalars['Boolean']['output']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
  videoId: Maybe<Scalars['String']['output']>;
  videoProvider: Maybe<Scalars['String']['output']>;
};


export type BlockVideo_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type BlockVideo_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockVideo_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockVideo_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockVideo_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockVideo_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockVideo_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockVideo_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockVideo_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockVideo_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type BlockVideo_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};


export type BlockVideo_EntryVideoProviderArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type Builder2ColumnsFieldEntryUnion = BlockColumn_Entry;

export type BuilderContentBlocksFieldEntryUnion = BlockCode_Entry | BlockImage_Entry | BlockImages_Entry | BlockLinks_Entry | BlockQuote_Entry | BlockSpacer_Entry | BlockTextImage_Entry | BlockText_Entry | BlockVideo_Entry;

export type BuilderContentBlocks_MatrixField = BlockCode_Entry | BlockImage_Entry | BlockImages_Entry | BlockLinks_Entry | BlockQuote_Entry | BlockSpacer_Entry | BlockTextImage_Entry | BlockText_Entry | BlockVideo_Entry;

export type BuilderContentFieldEntryUnion = BlockSection_Entry;

export type BuilderContent_MatrixField = BlockSection_Entry;

/** This entity has all the CodeData properties */
export type CodeSnippet_CodeData = {
  /** The language of the Code Field */
  language: Maybe<Scalars['String']['output']>;
  /** The data entered into the Code Field */
  value: Maybe<Scalars['String']['output']>;
};

export type EntryContentBuilder_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  builderContent: Array<Maybe<BuilderContent_MatrixField>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  customTitle: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  description: Maybe<Scalars['String']['output']>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  image: Array<Maybe<AssetInterface>>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  seo: Maybe<Scalars['String']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type EntryContentBuilder_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type EntryContentBuilder_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryContentBuilder_EntryBuilderContentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryContentBuilder_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryContentBuilder_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryContentBuilder_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryContentBuilder_EntryImageArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type EntryContentBuilder_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryContentBuilder_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryContentBuilder_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryContentBuilder_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryContentBuilder_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryContentBuilder_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type EntryError_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  customTitle: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  description: Maybe<Scalars['String']['output']>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  image: Array<Maybe<AssetInterface>>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  seo: Maybe<Scalars['String']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type EntryError_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type EntryError_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryError_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryError_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryError_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryError_EntryImageArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type EntryError_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryError_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryError_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryError_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryError_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryError_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type EntryHome_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  builderContent: Array<Maybe<BuilderContent_MatrixField>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  customTitle: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  description: Maybe<Scalars['String']['output']>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  image: Array<Maybe<AssetInterface>>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  seo: Maybe<Scalars['String']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type EntryHome_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type EntryHome_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryHome_EntryBuilderContentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryHome_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryHome_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryHome_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryHome_EntryImageArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type EntryHome_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryHome_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryHome_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryHome_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryHome_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryHome_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type EntryListNews_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  customTitle: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  description: Maybe<Scalars['String']['output']>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  image: Array<Maybe<AssetInterface>>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  seo: Maybe<Scalars['String']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type EntryListNews_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type EntryListNews_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryListNews_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryListNews_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryListNews_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryListNews_EntryImageArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type EntryListNews_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryListNews_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryListNews_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryListNews_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryListNews_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryListNews_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type EntryNewsDetail_Entry = ElementInterface & EntryInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The primary entry author. */
  author: Maybe<Array<Maybe<UserInterface>>>;
  /** The primary entry author’s ID. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** The entry authors’ IDs. */
  authorIds: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  /** The entry authors. */
  authors: Maybe<Array<Maybe<UserInterface>>>;
  builderContent: Array<Maybe<BuilderContent_MatrixField>>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The current revision for the entry. */
  currentRevision: Maybe<EntryInterface>;
  customTitle: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  description: Maybe<Scalars['String']['output']>;
  /** The creator of a given draft. */
  draftCreator: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** The drafts for the entry. */
  drafts: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The handle of the field that contains the entry. */
  fieldHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the field that contains the entry. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  image: Array<Maybe<AssetInterface>>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The ID of the entry’s owner elementt. */
  ownerId: Maybe<Scalars['Int']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator: Maybe<UserInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The revisions for the entry. */
  revisions: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the section that contains the entry. */
  sectionId: Maybe<Scalars['Int']['output']>;
  seo: Maybe<Scalars['String']['output']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic: Maybe<SeomaticInterface>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The entry’s position within the field that contains it. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type EntryNewsDetail_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type EntryNewsDetail_EntryAncestorsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryNewsDetail_EntryBuilderContentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryNewsDetail_EntryChildrenArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryNewsDetail_EntryDescendantsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryNewsDetail_EntryDraftsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryNewsDetail_EntryImageArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type EntryNewsDetail_EntryLocalizedArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryNewsDetail_EntryNextArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryNewsDetail_EntryParentArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryNewsDetail_EntryPrevArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryNewsDetail_EntryRevisionsArgs = {
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  autoplay: InputMaybe<Scalars['Boolean']['input']>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  codeSnippet: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  codeSnippetName: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  collapsed: InputMaybe<Scalars['Boolean']['input']>;
  columnRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  field: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hyperLinks: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  image: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagePosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageRatio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  images: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imagesViewMode: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  loop: InputMaybe<Scalars['Boolean']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  richText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  seo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showCaption: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spaceBetween: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  spacingYAxis: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  videoId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  videoProvider: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntryNewsDetail_EntrySeomaticArgs = {
  asArray: InputMaybe<Scalars['Boolean']['input']>;
  environment: InputMaybe<SeomaticEnvironment>;
  site: InputMaybe<Scalars['String']['input']>;
  siteId: InputMaybe<Scalars['Int']['input']>;
  uri: InputMaybe<Scalars['String']['input']>;
};

export type ErrorPagesSectionEntryUnion = EntryError_Entry;

export type Files_Asset = AssetInterface & ElementInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Alternative text for the asset. */
  alt: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  caption: Maybe<Scalars['String']['output']>;
  customTitle: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the asset file was last modified. */
  dateModified: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The file extension for the asset file. */
  extension: Scalars['String']['output'];
  /** The filename of the asset file. */
  filename: Scalars['String']['output'];
  /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
  focalPoint: Maybe<Array<Maybe<Scalars['Float']['output']>>>;
  /** The ID of the folder that the asset belongs to. */
  folderId: Scalars['Int']['output'];
  /** Returns the file’s format. */
  format: Maybe<Scalars['String']['output']>;
  /** Whether a user-defined focal point is set on the asset. */
  hasFocalPoint: Scalars['Boolean']['output'];
  /** The height in pixels or null if it’s not an image. */
  height: Maybe<Scalars['Int']['output']>;
  hyperLink: Array<Maybe<HyperLinkInterface>>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns a list of images produced from the named Imager X transform. */
  imagerTransform: Maybe<Array<Maybe<ImagerTransformedImageInterface>>>;
  /** An `<img>` tag based on this asset. */
  img: Maybe<Scalars['String']['output']>;
  /** The file kind. */
  kind: Scalars['String']['output'];
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The file’s MIME type, if it can be determined. */
  mimeType: Maybe<Scalars['String']['output']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<AssetInterface>;
  /** The asset’s path in the volume. */
  path: Scalars['String']['output'];
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<AssetInterface>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The file size in bytes. */
  size: Maybe<Scalars['String']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  source: Maybe<Scalars['String']['output']>;
  /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
  srcset: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The user who first added this asset (if known). */
  uploader: Maybe<UserInterface>;
  /** The ID of the user who first added this asset (if known). */
  uploaderId: Maybe<Scalars['Int']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
  url: Maybe<Scalars['String']['output']>;
  /** The ID of the volume that the asset belongs to. */
  volumeId: Maybe<Scalars['Int']['output']>;
  /** The width in pixels or null if it’s not an image. */
  width: Maybe<Scalars['Int']['output']>;
};


export type Files_Asset_CountArgs = {
  field: Scalars['String']['input'];
};


export type Files_AssetFormatArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Files_AssetHeightArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Files_AssetImagerTransformArgs = {
  transform: InputMaybe<Scalars['String']['input']>;
};


export type Files_AssetNextArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Files_AssetPrevArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Files_AssetSrcsetArgs = {
  sizes: Array<Scalars['String']['input']>;
};


export type Files_AssetUploaderArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Files_AssetUrlArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Files_AssetWidthArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};

export type HomeSectionEntryUnion = EntryHome_Entry;

export type HyperLink_Asset_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLink_Asset_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLink_Category_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};

export type HyperLink_Custom_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};

export type HyperLink_Email_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLink_Email_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLink_Embed_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};

export type HyperLink_Entry_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLink_Entry_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLink_Phone_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLink_Phone_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLink_Site_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLink_Site_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLink_Url_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLink_Url_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLink_User_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};

export type HyperLinks_Asset_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLinks_Asset_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLinks_Category_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};

export type HyperLinks_Custom_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};

export type HyperLinks_Email_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLinks_Email_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLinks_Embed_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLinks_Embed_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLinks_Entry_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLinks_Entry_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLinks_Phone_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLinks_Phone_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLinks_Site_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLinks_Site_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLinks_Url_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  linkStyle: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type HyperLinks_Url_LinkTypeLinkStyleArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type HyperLinks_User_LinkType = HyperLinkInterface & {
  /** The `aria-label` attribute for the link. */
  ariaLabel: Maybe<Scalars['String']['output']>;
  /** The `class` attribute for the link. */
  classes: Maybe<Scalars['String']['output']>;
  /** The element (if provided) for the link. */
  element: Maybe<ElementInterface>;
  /** Whether the chosen link value is an element. */
  isElement: Maybe<Scalars['Boolean']['output']>;
  /** Whether a link has been set for the field. */
  isEmpty: Maybe<Scalars['Boolean']['output']>;
  /** The HTML output for a `<a>` element. */
  link: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  linkText: Maybe<Scalars['String']['output']>;
  /** The uri for the link (if an element-based link). */
  linkUri: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  linkUrl: Maybe<Scalars['String']['output']>;
  /** The raw link data. */
  linkValue: Maybe<Scalars['String']['output']>;
  /** Whether the link should open in a new window. */
  newWindow: Maybe<Scalars['Boolean']['output']>;
  /** The `target` attribute for the link. */
  target: Maybe<Scalars['String']['output']>;
  /** The text for the link. */
  text: Maybe<Scalars['String']['output']>;
  /** The `title` attribute for the link. */
  title: Maybe<Scalars['String']['output']>;
  /** The link type. */
  type: Maybe<Scalars['String']['output']>;
  /** The url for the link. */
  url: Maybe<Scalars['String']['output']>;
  /** The url prefix for the link. */
  urlPrefix: Maybe<Scalars['String']['output']>;
  /** The url suffix for the link. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};

/** This entity has all the Imager X transform image interface fields. */
export type Imagerx = ImagerTransformedImageInterface & {
  /** Extension of transformed image. */
  extension: Maybe<Scalars['String']['output']>;
  /** Filename of transformed image. */
  filename: Maybe<Scalars['String']['output']>;
  /** Height of transformed image. */
  height: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Indicates if the transformed image is newly created. */
  isNew: Maybe<Scalars['Boolean']['output']>;
  /** Mime type of transformed image. */
  mimeType: Maybe<Scalars['String']['output']>;
  /** Path to transformed image. */
  path: Maybe<Scalars['String']['output']>;
  /** Size of transformed image. */
  size: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** URL for transformed image. */
  url: Maybe<Scalars['String']['output']>;
  /** Width of transformed image. */
  width: Maybe<Scalars['Int']['output']>;
};

export type Images_Asset = AssetInterface & ElementInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Alternative text for the asset. */
  alt: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  caption: Maybe<Scalars['String']['output']>;
  customTitle: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the asset file was last modified. */
  dateModified: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The file extension for the asset file. */
  extension: Scalars['String']['output'];
  /** The filename of the asset file. */
  filename: Scalars['String']['output'];
  /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
  focalPoint: Maybe<Array<Maybe<Scalars['Float']['output']>>>;
  /** The ID of the folder that the asset belongs to. */
  folderId: Scalars['Int']['output'];
  /** Returns the file’s format. */
  format: Maybe<Scalars['String']['output']>;
  /** Whether a user-defined focal point is set on the asset. */
  hasFocalPoint: Scalars['Boolean']['output'];
  /** The height in pixels or null if it’s not an image. */
  height: Maybe<Scalars['Int']['output']>;
  hyperLink: Array<Maybe<HyperLinkInterface>>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns a list of images produced from the named Imager X transform. */
  imagerTransform: Maybe<Array<Maybe<ImagerTransformedImageInterface>>>;
  /** An `<img>` tag based on this asset. */
  img: Maybe<Scalars['String']['output']>;
  /** The file kind. */
  kind: Scalars['String']['output'];
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The file’s MIME type, if it can be determined. */
  mimeType: Maybe<Scalars['String']['output']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<AssetInterface>;
  /** The asset’s path in the volume. */
  path: Scalars['String']['output'];
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<AssetInterface>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The file size in bytes. */
  size: Maybe<Scalars['String']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  source: Maybe<Scalars['String']['output']>;
  /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
  srcset: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The user who first added this asset (if known). */
  uploader: Maybe<UserInterface>;
  /** The ID of the user who first added this asset (if known). */
  uploaderId: Maybe<Scalars['Int']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
  url: Maybe<Scalars['String']['output']>;
  /** The ID of the volume that the asset belongs to. */
  volumeId: Maybe<Scalars['Int']['output']>;
  /** The width in pixels or null if it’s not an image. */
  width: Maybe<Scalars['Int']['output']>;
};


export type Images_Asset_CountArgs = {
  field: Scalars['String']['input'];
};


export type Images_AssetFormatArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Images_AssetHeightArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Images_AssetImagerTransformArgs = {
  transform: InputMaybe<Scalars['String']['input']>;
};


export type Images_AssetNextArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Images_AssetPrevArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Images_AssetSrcsetArgs = {
  sizes: Array<Scalars['String']['input']>;
};


export type Images_AssetUploaderArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Images_AssetUrlArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Images_AssetWidthArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};

export type NavigationMain_Node = ElementInterface & NodeInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The node’s children. Accepts the same arguments as the `nodes` query. */
  children: Maybe<Array<Maybe<NodeInterface>>>;
  /** Any additional classes for the node. */
  classes: Maybe<Scalars['String']['output']>;
  /** Any additional custom attributes for the node. */
  customAttributes: Maybe<Array<Maybe<NodeCustomAttribute>>>;
  /** Any additional data for the node. */
  data: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The element the node links to. */
  element: Maybe<ElementInterface>;
  /** The ID of the element this node is linked to. */
  elementId: Maybe<Scalars['Int']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The handle of the navigation this node belongs to. */
  navHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the navigation this node belongs to. */
  navId: Maybe<Scalars['Int']['output']>;
  /** The name of the navigation this node belongs to. */
  navName: Maybe<Scalars['String']['output']>;
  /** Whether this node should open in a new window. */
  newWindow: Maybe<Scalars['String']['output']>;
  /** The node’s URI */
  nodeUri: Maybe<Scalars['String']['output']>;
  /** The node’s parent. */
  parent: Maybe<NodeInterface>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The type of node this is. */
  type: Maybe<Scalars['String']['output']>;
  /** The display name for the type of node this is. */
  typeLabel: Maybe<Scalars['String']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The node’s full URL */
  url: Maybe<Scalars['String']['output']>;
  /** The URL for this navigation item. */
  urlSuffix: Maybe<Scalars['String']['output']>;
};


export type NavigationMain_Node_CountArgs = {
  field: Scalars['String']['input'];
};


export type NavigationMain_NodeChildrenArgs = {
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  archived: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  draftCreator: InputMaybe<Scalars['Int']['input']>;
  draftId: InputMaybe<Scalars['Int']['input']>;
  draftOf: InputMaybe<Scalars['QueryArgument']['input']>;
  drafts: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nav: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  navHandle: InputMaybe<Scalars['String']['input']>;
  navId: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  provisionalDrafts: InputMaybe<Scalars['Boolean']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  revisionCreator: InputMaybe<Scalars['Int']['input']>;
  revisionId: InputMaybe<Scalars['Int']['input']>;
  revisionOf: InputMaybe<Scalars['QueryArgument']['input']>;
  revisions: InputMaybe<Scalars['Boolean']['input']>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type NewsSectionEntryUnion = EntryNewsDetail_Entry;

export type PagesSectionEntryUnion = EntryContentBuilder_Entry | EntryListNews_Entry;

export type TemplateImages_Asset = AssetInterface & ElementInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Alternative text for the asset. */
  alt: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  caption: Maybe<Scalars['String']['output']>;
  customTitle: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the asset file was last modified. */
  dateModified: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The file extension for the asset file. */
  extension: Scalars['String']['output'];
  /** The filename of the asset file. */
  filename: Scalars['String']['output'];
  /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
  focalPoint: Maybe<Array<Maybe<Scalars['Float']['output']>>>;
  /** The ID of the folder that the asset belongs to. */
  folderId: Scalars['Int']['output'];
  /** Returns the file’s format. */
  format: Maybe<Scalars['String']['output']>;
  /** Whether a user-defined focal point is set on the asset. */
  hasFocalPoint: Scalars['Boolean']['output'];
  /** The height in pixels or null if it’s not an image. */
  height: Maybe<Scalars['Int']['output']>;
  hyperLink: Array<Maybe<HyperLinkInterface>>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns a list of images produced from the named Imager X transform. */
  imagerTransform: Maybe<Array<Maybe<ImagerTransformedImageInterface>>>;
  /** An `<img>` tag based on this asset. */
  img: Maybe<Scalars['String']['output']>;
  /** The file kind. */
  kind: Scalars['String']['output'];
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The file’s MIME type, if it can be determined. */
  mimeType: Maybe<Scalars['String']['output']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<AssetInterface>;
  /** The asset’s path in the volume. */
  path: Scalars['String']['output'];
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<AssetInterface>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The file size in bytes. */
  size: Maybe<Scalars['String']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  source: Maybe<Scalars['String']['output']>;
  /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
  srcset: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The user who first added this asset (if known). */
  uploader: Maybe<UserInterface>;
  /** The ID of the user who first added this asset (if known). */
  uploaderId: Maybe<Scalars['Int']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
  url: Maybe<Scalars['String']['output']>;
  /** The ID of the volume that the asset belongs to. */
  volumeId: Maybe<Scalars['Int']['output']>;
  /** The width in pixels or null if it’s not an image. */
  width: Maybe<Scalars['Int']['output']>;
};


export type TemplateImages_Asset_CountArgs = {
  field: Scalars['String']['input'];
};


export type TemplateImages_AssetFormatArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type TemplateImages_AssetHeightArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type TemplateImages_AssetImagerTransformArgs = {
  transform: InputMaybe<Scalars['String']['input']>;
};


export type TemplateImages_AssetNextArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type TemplateImages_AssetPrevArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type TemplateImages_AssetSrcsetArgs = {
  sizes: Array<Scalars['String']['input']>;
};


export type TemplateImages_AssetUploaderArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type TemplateImages_AssetUrlArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type TemplateImages_AssetWidthArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};

export type Users_Asset = AssetInterface & ElementInterface & {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Alternative text for the asset. */
  alt: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  caption: Maybe<Scalars['String']['output']>;
  customTitle: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the asset file was last modified. */
  dateModified: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The file extension for the asset file. */
  extension: Scalars['String']['output'];
  /** The filename of the asset file. */
  filename: Scalars['String']['output'];
  /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
  focalPoint: Maybe<Array<Maybe<Scalars['Float']['output']>>>;
  /** The ID of the folder that the asset belongs to. */
  folderId: Scalars['Int']['output'];
  /** Returns the file’s format. */
  format: Maybe<Scalars['String']['output']>;
  /** Whether a user-defined focal point is set on the asset. */
  hasFocalPoint: Scalars['Boolean']['output'];
  /** The height in pixels or null if it’s not an image. */
  height: Maybe<Scalars['Int']['output']>;
  hyperLink: Array<Maybe<HyperLinkInterface>>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns a list of images produced from the named Imager X transform. */
  imagerTransform: Maybe<Array<Maybe<ImagerTransformedImageInterface>>>;
  /** An `<img>` tag based on this asset. */
  img: Maybe<Scalars['String']['output']>;
  /** The file kind. */
  kind: Scalars['String']['output'];
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The file’s MIME type, if it can be determined. */
  mimeType: Maybe<Scalars['String']['output']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<AssetInterface>;
  /** The asset’s path in the volume. */
  path: Scalars['String']['output'];
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<AssetInterface>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The file size in bytes. */
  size: Maybe<Scalars['String']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
  srcset: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The user who first added this asset (if known). */
  uploader: Maybe<UserInterface>;
  /** The ID of the user who first added this asset (if known). */
  uploaderId: Maybe<Scalars['Int']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
  url: Maybe<Scalars['String']['output']>;
  /** The ID of the volume that the asset belongs to. */
  volumeId: Maybe<Scalars['Int']['output']>;
  /** The width in pixels or null if it’s not an image. */
  width: Maybe<Scalars['Int']['output']>;
};


export type Users_Asset_CountArgs = {
  field: Scalars['String']['input'];
};


export type Users_AssetFormatArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Users_AssetHeightArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Users_AssetImagerTransformArgs = {
  transform: InputMaybe<Scalars['String']['input']>;
};


export type Users_AssetNextArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Users_AssetPrevArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  customTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  hyperLink: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  source: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Users_AssetSrcsetArgs = {
  sizes: Array<Scalars['String']['input']>;
};


export type Users_AssetUploaderArgs = {
  archived: InputMaybe<Scalars['Boolean']['input']>;
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  notRelatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetRelationCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryRelationCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryRelationCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagRelationCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserRelationCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  trashed: InputMaybe<Scalars['Boolean']['input']>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Users_AssetUrlArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Users_AssetWidthArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};

type Entry_Data_BlockCode_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_BlockCode_Entry_Fragment' };

type Entry_Data_BlockColumn_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_BlockColumn_Entry_Fragment' };

type Entry_Data_BlockImage_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_BlockImage_Entry_Fragment' };

type Entry_Data_BlockImages_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_BlockImages_Entry_Fragment' };

type Entry_Data_BlockLinks_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_BlockLinks_Entry_Fragment' };

type Entry_Data_BlockQuote_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_BlockQuote_Entry_Fragment' };

type Entry_Data_BlockSection_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_BlockSection_Entry_Fragment' };

type Entry_Data_BlockSpacer_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_BlockSpacer_Entry_Fragment' };

type Entry_Data_BlockTextImage_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_BlockTextImage_Entry_Fragment' };

type Entry_Data_BlockText_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_BlockText_Entry_Fragment' };

type Entry_Data_BlockVideo_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_BlockVideo_Entry_Fragment' };

type Entry_Data_EntryContentBuilder_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_EntryContentBuilder_Entry_Fragment' };

type Entry_Data_EntryError_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_EntryError_Entry_Fragment' };

type Entry_Data_EntryHome_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_EntryHome_Entry_Fragment' };

type Entry_Data_EntryListNews_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_EntryListNews_Entry_Fragment' };

type Entry_Data_EntryNewsDetail_Entry_Fragment = { id: string | null, uid: string | null, title: string | null, slug: string | null, uri: string | null, url: string | null, canonicalId: number | null, language: string | null, sectionHandle: string | null, typeHandle: string, siteHandle: string | null, siteId: number | null } & { ' $fragmentName'?: 'Entry_Data_EntryNewsDetail_Entry_Fragment' };

export type Entry_DataFragment = Entry_Data_BlockCode_Entry_Fragment | Entry_Data_BlockColumn_Entry_Fragment | Entry_Data_BlockImage_Entry_Fragment | Entry_Data_BlockImages_Entry_Fragment | Entry_Data_BlockLinks_Entry_Fragment | Entry_Data_BlockQuote_Entry_Fragment | Entry_Data_BlockSection_Entry_Fragment | Entry_Data_BlockSpacer_Entry_Fragment | Entry_Data_BlockTextImage_Entry_Fragment | Entry_Data_BlockText_Entry_Fragment | Entry_Data_BlockVideo_Entry_Fragment | Entry_Data_EntryContentBuilder_Entry_Fragment | Entry_Data_EntryError_Entry_Fragment | Entry_Data_EntryHome_Entry_Fragment | Entry_Data_EntryListNews_Entry_Fragment | Entry_Data_EntryNewsDetail_Entry_Fragment;

export type GetNewsEntriesQueryVariables = Exact<{
  site?: Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>;
  section: Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>;
}>;


export type GetNewsEntriesQuery = { entries: Array<{ ' $fragmentRefs'?: { 'Entry_Data_BlockCode_Entry_Fragment': Entry_Data_BlockCode_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_BlockColumn_Entry_Fragment': Entry_Data_BlockColumn_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_BlockImage_Entry_Fragment': Entry_Data_BlockImage_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_BlockImages_Entry_Fragment': Entry_Data_BlockImages_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_BlockLinks_Entry_Fragment': Entry_Data_BlockLinks_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_BlockQuote_Entry_Fragment': Entry_Data_BlockQuote_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_BlockSection_Entry_Fragment': Entry_Data_BlockSection_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_BlockSpacer_Entry_Fragment': Entry_Data_BlockSpacer_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_BlockTextImage_Entry_Fragment': Entry_Data_BlockTextImage_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_BlockText_Entry_Fragment': Entry_Data_BlockText_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_BlockVideo_Entry_Fragment': Entry_Data_BlockVideo_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_EntryContentBuilder_Entry_Fragment': Entry_Data_EntryContentBuilder_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_EntryError_Entry_Fragment': Entry_Data_EntryError_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_EntryHome_Entry_Fragment': Entry_Data_EntryHome_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_EntryListNews_Entry_Fragment': Entry_Data_EntryListNews_Entry_Fragment } } | { ' $fragmentRefs'?: { 'Entry_Data_EntryNewsDetail_Entry_Fragment': Entry_Data_EntryNewsDetail_Entry_Fragment } } | null> | null };

export const Entry_DataFragmentDoc = gql`
    fragment entry_data on EntryInterface {
  id
  uid
  title
  slug
  uri
  url
  canonicalId
  language
  sectionHandle
  typeHandle
  siteHandle
  siteId
}
    `;
export const GetNewsEntriesDocument = gql`
    query GetNewsEntries($site: [String]! = ["default"], $section: [String]!) {
  entries(site: $site, section: $section) {
    ...entry_data
  }
}
    ${Entry_DataFragmentDoc}`;

/**
 * __useGetNewsEntriesQuery__
 *
 * To run a query within a React component, call `useGetNewsEntriesQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetNewsEntriesQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetNewsEntriesQuery({
 *   variables: {
 *      site: // value for 'site'
 *      section: // value for 'section'
 *   },
 * });
 */
export function useGetNewsEntriesQuery(baseOptions: Apollo.QueryHookOptions<GetNewsEntriesQuery, GetNewsEntriesQueryVariables> & ({ variables: GetNewsEntriesQueryVariables; skip?: boolean; } | { skip: boolean; }) ) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<GetNewsEntriesQuery, GetNewsEntriesQueryVariables>(GetNewsEntriesDocument, options);
      }
export function useGetNewsEntriesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetNewsEntriesQuery, GetNewsEntriesQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<GetNewsEntriesQuery, GetNewsEntriesQueryVariables>(GetNewsEntriesDocument, options);
        }
export function useGetNewsEntriesSuspenseQuery(baseOptions?: Apollo.SkipToken | Apollo.SuspenseQueryHookOptions<GetNewsEntriesQuery, GetNewsEntriesQueryVariables>) {
          const options = baseOptions === Apollo.skipToken ? baseOptions : {...defaultOptions, ...baseOptions}
          return Apollo.useSuspenseQuery<GetNewsEntriesQuery, GetNewsEntriesQueryVariables>(GetNewsEntriesDocument, options);
        }
export type GetNewsEntriesQueryHookResult = ReturnType<typeof useGetNewsEntriesQuery>;
export type GetNewsEntriesLazyQueryHookResult = ReturnType<typeof useGetNewsEntriesLazyQuery>;
export type GetNewsEntriesSuspenseQueryHookResult = ReturnType<typeof useGetNewsEntriesSuspenseQuery>;
export type GetNewsEntriesQueryResult = Apollo.QueryResult<GetNewsEntriesQuery, GetNewsEntriesQueryVariables>;